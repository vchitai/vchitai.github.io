<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Barber Theme</title>
    <description>Barber is a blog theme for Jekyll built by Thomas Vaeth for Samesies using HTML, Sass, and JavaScript.
</description>
    <link>http://barber.samesies.io</link>
    <atom:link href="http://barber.samesies.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 28 Jul 2019 16:16:04 +0700</pubDate>
    <lastBuildDate>Sun, 28 Jul 2019 16:16:04 +0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>The Art Of Error Messages</title>
        <description>&lt;p&gt;Bài viết gốc:
&lt;a href=&quot;https://medium.com/s/user-friendly/the-art-of-the-error-message-9f878d0bff80&quot;&gt;&lt;em&gt;The Art of the Error Message (Nghệ thuật thông báo lỗi)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bởi &lt;a href=&quot;https://medium.com/u/aacfeaaa2521&quot;&gt;Marina Posniak&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://medium.com/u/86255198a82f&quot;&gt;Tamara Hilmes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Khái niệm nắm bắt failure mang ý nghĩa khá lớn trong ngành công nghệ. “Fail fast, fail often” hầu như đã trở thành một câu thần chú của ngành. Nhưng có một loại failure hàng ngày mà chưa được chú ý nhiều trong quá trình phát triển sản phẩm: những thông báo lỗi bình thường.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thông báo lỗi phải giúp người dùng giải quyết vấn đề và tiếp tục công việc.&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;khi-thông-báo-lỗi-là-một-vấn-đề&quot;&gt;Khi thông báo lỗi là một vấn đề&lt;/h1&gt;

&lt;p&gt;Tất cả chúng ta đều đã thấy qua thông báo lỗi “mật khẩu chưa chính xác” ở đâu đó (hoặc có thể là hàng ngày). Mặc dù điều này có thể gây nản lòng khi mọi thứ không hoạt động như mong đợi, chúng ta thường chỉ gạt đi như không có vấn đề gì lớn. Nhưng hiệu ứng tích lũy trong những khoảnh khắc nhỏ này là gì?&lt;/p&gt;

&lt;p&gt;Mỗi thông báo lỗi là một rào cản nhỏ bé cản trở những gì chúng ta đang cố gắng thực hiện. Tùy thuộc vào ngữ cảnh, một thông điệp không có ích có thể tạo nên sự khác biệt giữa việc tiếp tục sử dụng hoặc lựa chọn từ bỏ. Thậm chí, một số nghiên cứu còn cho rằng các thông báo lỗi kích hoạt phản ứng căng thẳng vật lý bằng cách tăng mức cortisol.&lt;/p&gt;

&lt;p&gt;Chỉ cần nghĩ về sự khác biệt giữa việc nhìn thấy một cái gì đó như thế này:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*bAAcI5bChT2EciWlxJwLfQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Và thấy một cái gì đó mang tính hành động hơn, như thế này:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*CLQTWR2h3BOqP0MLtSg7bw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nếu bạn là một writer, designer hoặc developer đang làm một ứng dụng, bạn có thể giúp giảm bớt sự thất vọng của người dùng bằng cách suy nghĩ kỹ hơn về các lỗi sẽ hiển thị.&lt;/p&gt;

&lt;p&gt;Hãy tự hỏi rằng liệu có cần thông báo lỗi không?. Trước khi viết bất cứ điều gì, hãy xem xét để tìm cách thiết kế lại experience để không có lỗi nào xảy ra cả. Có cách nào để làm cho nó hoạt động bình thường không? Thông báo lỗi tốt nhất là không có thông báo lỗi.&lt;/p&gt;

&lt;p&gt;Nếu thật sự cần nó, hãy suy nghĩ cẩn thận về lời nhắn. Khi gặp sự cố và ứng dụng bị lỗi, hãy viết điều gì đó hữu ích. Thông điệp ấy sẽ giúp người dùng giải quyết vấn đề và tiếp tục sử dụng.&lt;/p&gt;

&lt;h1 id=&quot;mẹo-viết-những-thông-báo-lỗi-hữu-ích&quot;&gt;Mẹo viết những thông báo lỗi hữu ích&lt;/h1&gt;

&lt;p&gt;Nếu ta thật sự không thể khắc phục sự cố cơ bản và cần hiển thị thông báo lỗi, đây là một số điều cần lưu ý.&lt;/p&gt;

&lt;h2 id=&quot;giải-thích-những-gì-đã-xảy-ra-và-tại-sao&quot;&gt;Giải thích những gì đã xảy ra và tại sao&lt;/h2&gt;

&lt;p&gt;Nhiều thông báo lỗi rất mơ hồ. Thực sự mơ hồ. Hãy luôn mô tả rõ ràng về những gì đang diễn ra bất kỳ khi nào có thể. Đưa ra số lượng chi tiết phù hợp, nhưng đừng quá nhiều thông tin về mặt kỹ thuật. Viết theo cách mà bất cứ ai cũng có thể dễ dàng hiểu được. Tức là đừng dùng biệt ngữ trong thông báo.&lt;/p&gt;

&lt;p&gt;Hãy tưởng tượng người dùng nhìn thấy một quảng cáo về Spotify Premium và nhấp vào liên kết để bắt đầu dùng thử miễn phí. Sau đó, họ truy cập vào một trang và thấy một cái gì đó như thế này:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*OPL0sFzu3xpQtViI5Qt6ag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nó chưa thể hiện rõ lý do tại sao người dùng lại không đủ điều kiện(ineligible) để nhận offer này, đặc biệt là khi họ vừa nhận được email nói rằng, “Hey, nhận lấy này!”. Chuyện gì đang xảy ra vậy?.&lt;/p&gt;

&lt;p&gt;Trong trường hợp này, điều quan trọng là phải nói với người dùng những gì đã xảy ra (họ không đủ điều kiện để tiếp tục) và tại sao (trước đây họ đã đăng ký dùng thử miễn phí).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*MkJk6b2GSGuEG3Fzz_FOdA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Và vâng, tin nhắn này đã dài hơn, nhưng đôi khi chúng ta cần thêm nhiều thông tin hơn nữa để làm cho nó thật sự hữu ích.&lt;/p&gt;

&lt;h2 id=&quot;đề-xuất-thao-tác-tiếp-theo&quot;&gt;Đề xuất thao tác tiếp theo&lt;/h2&gt;

&lt;p&gt;Sau khi ta giải thích những gì đã xảy ra, hãy nói với người dùng những gì họ có thể làm để giải quyết vấn đề. Hãy thêm một nút, một liên kết hoặc một chỉ dẫn hành động khác. Viết một tiêu đề rõ ràng trình bày thẳng vào điểm chính nhanh chóng.&lt;/p&gt;

&lt;p&gt;Hãy tưởng tượng ta đang muốn tìm kiếm một số podcast mới. ta kích hoạt ứng dụng và thấy thông báo lỗi:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*YQRh9Ehy-FABQj7Dh16IKA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thông báo này cho ta biết những gì đã xảy ra và tại sao, nhưng nó chưa đề xuất thao tác tiếp theo. Tốt hơn hết là để thêm một tiêu đề rõ ràng (ứng dụng đã hết hạn sử dụng) và lời chỉ dẫn người dùng thao tác tiếp (nút download).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*GwIteJ5fM_-NFUeoPBo1Kg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bắt-đúng-tone&quot;&gt;Bắt đúng tone&lt;/h2&gt;

&lt;p&gt;Là các UX writers, chúng ta muốn truyền đạt đúng thông tin vào đúng thời điểm. Nhưng nó không chỉ về những gì chúng ta truyền đạt, mà còn nói về cách chúng ta truyền đạt. Khi ta nói đến tone, chúng ta cố gắng tìm sự cân bằng phù hợp, hoặc, như chúng tôi nói ở Thụy Điển, &lt;a href=&quot;https://en.wikipedia.org/wiki/Lagom&quot;&gt;lagom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tone ở đây đề cập đến tính cách hoặc thái độ của ngôn ngữ. Trong cùng một brand voice, văn bản của ta có thể mang một âm điệu khác nhau tùy thuộc vào tình huống. Nó có thể nghiêm túc hơn, trung lập hoặc thân thiện hơn, tất cả phụ thuộc vào người ta viết cho ai và ta viết về cái gì. Bạn thay đổi giọng điệu của Bạn liên tục; chỉ cần nghĩ về cách bạn nói chuyện với bạn bè, bố mẹ hoặc sếp của bạn.&lt;/p&gt;

&lt;p&gt;Làm thế nào để chọn đúng tone? Có thể bắt đầu bằng cách tự hỏi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Người dùng cảm thấy thế nào trong tình huống này? Nếu nó là một vấn đề căng thẳng hoặc nghiêm trọng, một giọng điệu ngớ ngẩn sẽ không phù hợp.&lt;/li&gt;
  &lt;li&gt;Thực sự bạn sẽ trình bày nó như vậy? Đọc to tin nhắn có thể giúp bạn xác định chính xác các từ hoặc cụm từ bạn cần sửa lại.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*NUBTDySL7fMq5hJqiY99cg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Bad request. Mật khẩu được cung cấp không hợp lệ. → Những từ như “Bad request” và “được cung cấp” làm cho nó nghe có vẻ cứng nhắc.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Mật khẩu đó không khớp. Thử lại? → Câu này trình bày một cách khá rõ ràng và dễ tiếp cận. Khá ổn đấy.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Có vấn đề! Mật khẩu bạn cung cấp không khớp. Bạn muốn thử lại không? → Thực sự bạn sẽ trình bày nó như vậy sao? Câu nói này thật sự có một chút quá ngớ ngẩn.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ba thông điệp này cùng nói lên một điều, nhưng giọng điệu thì khác. Khi bạn viết một thông báo lỗi, hãy chọn đúng tone phù hợp nhất với người dùng và bối cảnh.&lt;/p&gt;

&lt;h1 id=&quot;kết-luận&quot;&gt;Kết luận&lt;/h1&gt;

&lt;p&gt;Sự khác biệt giữa trải nghiệm người dùng tốt và xấu thường nằm ở các chi tiết. Viết thông báo lỗi rõ ràng có thể làm giảm sự thất vọng và giúp mọi người tiếp tục sử dụng ứng dụng hoặc dịch vụ của bạn. Rất đáng để chia sẻ cho người dùng của chúng ta một ít tình yêu. Lần tới khi bạn viết một thông báo lỗi, hãy ghi nhớ những lời khuyên sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trình bày những gì đã xảy ra và tại sao.&lt;/li&gt;
  &lt;li&gt;Đề xuất bước tiếp theo.&lt;/li&gt;
  &lt;li&gt;Tìm đúng tone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Và đừng quên đọc lớn message và lọc ra những biệt ngữ phiền phức.&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Jan 2019 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2019/01/29/the-art-of-error-messages/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2019/01/29/the-art-of-error-messages/</guid>
        
        
      </item>
    
      <item>
        <title>Four Decisions Microservices</title>
        <description>&lt;p&gt;Bài viết gốc:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/systems-architectures/walking-the-microservices-path-towards-loose-coupling-few-pitfalls-4067bf5e497a&quot;&gt;&lt;em&gt;Walking the wire: Mastering the Four Decisions in Microservices Architecture
(Đi trên dây điện: Làm chủ bốn quyết định trong kiến trúc Microservices)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microservices đã trở thành một tiêu chuẩn kiến trúc mới để xây dựng hệ thống với các dịch vụ đơn giản, nhẹ tải, độc lập với nhau để có thể phát triển và chạy độc lập với các thành phần khác.&lt;/p&gt;

&lt;p&gt;Nếu mới bắt đầu với microservice, tôi đề nghị bạn đọc &lt;a href=&quot;https://martinfowler.com/articles/microservices.html&quot;&gt;bài viết của Martin Fowler&lt;/a&gt;. Nếu bạn muốn so sánh nó với SOA, hãy xem bài &lt;a href=&quot;https://www.youtube.com/watch?v=W7tGlxJtofI&quot;&gt;diễn thuyết của Don Ferguson&lt;/a&gt;. Đồng thời, &lt;a href=&quot;https://martinfowler.com/articles/microservice-trade-offs.html&quot;&gt;“trade-off of microservices” (Sự đánh đổi của microservice)&lt;/a&gt; và &lt;a href=&quot;http://martinfowler.com/bliki/MicroservicePremium.html&quot;&gt;“when it is worth doing microservices”(Khi nào nên làm microservice?)&lt;/a&gt; của Martin Fowler cũng sẽ giúp bạn quyết định khi nào microservices thật sự hữu ích.&lt;/p&gt;

&lt;p&gt;Hãy giả sử rằng bạn đã nghe, đọc hay quan tâm đến microservices. Những tín đồ của kiến trúc microservices đang đối mặt với nhiều thách thức thực tế. Bài viết này sẽ thảo luận về các giải quyết vài vấn đề trong đấy. Từ bây giờ, tôi sẽ sử dụng MSA trong phần còn lại của bài viết mỗi khi nhắc đến kiến trúc Microservices.&lt;/p&gt;

&lt;h1 id=&quot;quyết-định-thứ-nhất-không-sử-dụng-database-trung-gian&quot;&gt;Quyết định thứ nhất: Không sử dụng database trung gian&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/600/1*6Tr4t8K9h1yhEpw_4Lbntw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mỗi microservice nên có database riêng và dữ liệu không nên chia sẻ dữ liệu qua một database chung. Nguyên tắc này giúp loại bỏ một nguyên nhân thường gặp làm bó buộc các hệ thống với nhau. Theo đó, nếu hai service chia sẻ database với nhau, service thứ hai sẽ hỏng ngay nếu service đầu tiên thay đổi schema của database. Hai team sẽ phải bàn bạc với nhau trước khi thay đổi database, dẫn tới tình trạng trì hoãn và kéo lùi chúng ta lại.&lt;/p&gt;

&lt;p&gt;Tôi nghĩ đây là một nguyên tắc đúng đắn và không nên phá vỡ.&lt;/p&gt;

&lt;p&gt;Tuy nhiên, có một vấn đề ở đây. Chúng ta thường xuyên chia sẻ database giữa các service dùng chung dữ liệu (ví dụ: dữ liệu tài khoản ngân hàng, giỏ hàng) và cần phải cập nhật dữ liệu theo cơ chế transaction bằng việc sử dụng database transaction để tăng cường tính thống nhất.&lt;/p&gt;

&lt;p&gt;Bất kỳ giải pháp nào khác đều khá khó. Hãy xem thử một vài giải pháp.&lt;/p&gt;

&lt;p&gt;Giải pháp 1: Nếu việc cập nhật chỉ xảy ra trên một microservice (ví dụ: quy trình duyệt nợ phải kiểm tra balance của tài khoản), ta có thể dùng hệ thống message bất đồng bộ (message queue) để chia sẻ dữ liệu&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*lYK6dTfYyP1YCie_yHBIuw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Giải pháp 2: Nếu việc cập nhật xảy ra trên cả hai service, hoặc ta phải xem xét sáp nhập hai services lại làm một hoặc chọn cách sử dụng transactions. Bài viết &lt;a href=&quot;https://www.tigerteam.dk/2014/micro-services-its-not-only-the-size-that-matters-its-also-how-you-use-them-part-2/&quot;&gt;Microservices: It’s not (only) the size that matters, it’s (also) how you use them (Microservices: không chỉ kích thước, mà cách sử dụng của bạn cũng là vấn đề)&lt;/a&gt; mô tả chi tiết hơn cho ý thứ nhất. Phần tiếp theo của bài viết sẽ mô tả chi tiết sử dụng transaction theo ý hai.&lt;/p&gt;

&lt;h2 id=&quot;xử-lý-việc-cập-nhật-dữ-liệu-một-cách-thống-nhất&quot;&gt;Xử lý việc cập nhật dữ liệu một cách thống nhất&lt;/h2&gt;

&lt;p&gt;Chúng ta đã thảo luận cách xử lý trường hợp một service duy nhất cập nhật dữ liệu. Cùng thảo luận cách xử lý khi nhiều service cập nhật dữ liệu. Chúng ta đã cùng thảo luận về một ví dụ trong phần trên.&lt;/p&gt;

&lt;p&gt;Thông thường, chúng ta sử dụng các transaction chậm, nặng nề và tốn kém với một các tùy chỉnh phân tán để giải quyết vấn đề này. Tuy nhiên, ta thỉnh thoảng có thể giải quyết vấn đề mà không sử dụng transaction.&lt;/p&gt;

&lt;p&gt;Có khá nhiều lựa chọn để ta chọn lựa.&lt;/p&gt;

&lt;h3 id=&quot;lựa-chọn-1-đưa-tất-cả-cập-nhật-về-cùng-một-microservice&quot;&gt;Lựa chọn 1: Đưa tất cả cập nhật về cùng một Microservice.&lt;/h3&gt;

&lt;p&gt;Tránh việc cập nhật xuyên biên giới microservice ngay khi có thể. Tuy nhiên, đôi khi nếu sử dụng cách này, ta cuối cùng sẽ tạo ra một vài services hay một kiến trúc một khối to đùng, xấu xí, kéo lùi ta về sau. Vì thể, việc này thỉnh thoảng không hề khả thi tí nào.&lt;/p&gt;

&lt;h3 id=&quot;lựa-chọn-2-sử-dụng-compensation-với-nhiều-guarantee-nhỏ-hơn&quot;&gt;Lựa chọn 2: Sử dụng Compensation với nhiều Guarantee nhỏ hơn&lt;/h3&gt;

&lt;p&gt;Như mô tả trong bài viết nổi tiếng &lt;a href=&quot;https://news.ycombinator.com/item?id=7995130&quot;&gt;“Starbucks Does Not Use Two-Phase Commit”(Starbucks không dùng commit hai pha)&lt;/a&gt;, thế giới thực của chúng ta hoạt động không cần transactions. Thật vậy, các barista ở Starbucks không cần phải đợi cho tới khi transaction hoàn thành. Thay vào đó, họ xử lý nhiều khách hàng khác nhau cùng lúc, đền bù nếu xảy ra lỗi rõ ràng. Ta có thể làm giống vậy nếu ta muốn chỉ làm ít việc.&lt;/p&gt;

&lt;p&gt;Ý tưởng chủ đạo là nếu một hành động thất bại xảy ra, ta có thể đền bù cho việc đó. Ví dụ, nếu đang ship một quyển sách, đầu tiên hãy giảm tiền ngay, sau đó ship quyển sách, và nếu việc ship thất bại, hoàn tiền lại.&lt;/p&gt;

&lt;p&gt;Một ý tưởng đơn giản khác là tặng cho user một nút để ép refresh trang nếu họ cảm thấy dữ liệu chưa ở trạng thái mới nhất. Đồng thời, cơ chế eventual consistency hay timeout đôi khi đã đủ dùng. Ta sẽ cố gắng chịu đựng một vấn đề không thể tránh khỏi và xử lý bằng cách đánh đổi tính thống nhất (&lt;a href=&quot;http://www.allthingsdistributed.com/2007/12/eventually_consistent.html&quot;&gt;bài viết của Vogel&lt;/a&gt; là một khởi điểm tốt đấy)&lt;/p&gt;

&lt;p&gt;Cuối cùng, &lt;a href=&quot;http://adrianmarriott.net/logosroot/papers/LifeBeyondTxns.pdf&quot;&gt;Life Beyond Distributed Transactions: An Apostate’s Opinion&lt;/a&gt; là  một cuộc thảo luận chi tiết về tất cả các tricks ở phía trên.&lt;/p&gt;

&lt;p&gt;Nhưng cũng phải nói rằng, vài trường hợp nhất thiết phải cần transaction để cho ra kết quả chính xác. Hãy xem bài viết &lt;a href=&quot;http://jbossts.blogspot.com/2015/04/microservices-and-transactions-update.html&quot;&gt;Microservices and transactions-an update&lt;/a&gt;, nơi cân đo đong đến những ưu nhược và chọn lựa cẩn thận&lt;/p&gt;

&lt;h1 id=&quot;quyết-định-thứ-hai-xử-lý-bảo-mật-cho-microservice&quot;&gt;Quyết định thứ hai: Xử lý bảo mật cho Microservice&lt;/h1&gt;

&lt;p&gt;Trước khi microserivce ra đời, các service xác thực nhau bằng cách gọi đến một database hay Identity Server khi chúng nhận được một request.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*3lpnSTPEKDs5KRBASZ9JZw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Trong MSA, chúng ta có thể thay thế identity server với một microservice, mà theo ý kiến của tôi, sẽ kéo theo một sơ đồ dependency phức tạp và to lớn khác.&lt;/p&gt;

&lt;p&gt;Thay vào đó, tôi thích cách tiếp cận theo token được mô tả trong cuốn sách “Building Microservices” và tóm lại theo hình bên dưới.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*KUVq9jOXlF_5j6eaf96qxg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Client giao tiếp với một server identity hay SSO, tự xác thực nó, nhận lại một token mô tả user và các quyền của user với SAML hay OpenIDConnect, và gửi token cho các microservice khác với mỗi request. Mỗi microservice verify token đó và xác thực lời gọi dựa trên quyền hạn user được mô tả trong token. Mô hình này đẩy việc xác thực về phía client và quản lý quyền ở các microservices trong khi đơn giản hóa các dependencies. Ví dụ, với model này, với cùng một truy vấn, user với role “publisher” có thể thấy các kết quả khác với user với role “admin” bởi vì họ có permission khác nhau.&lt;/p&gt;

&lt;p&gt;Cũng cần phải lưu ý rằng client có thể lấy token một lần và tái sử dụng nó, việc này chỉ diễn ra một lần mỗi session. Vì vậy, chi phí cho các lần gọi bổ sung là nhỏ.&lt;/p&gt;

&lt;p&gt;Bài viết &lt;a href=&quot;http://nordicapis.com/how-to-control-user-identity-within-microservices/&quot;&gt;How To Control User Identity Within Microservices?&lt;/a&gt; cung cấp thêm nhiều thông tin về các tiếp cận này.&lt;/p&gt;

&lt;h1 id=&quot;quyết-định-thứ-ba-xử-lý-điều-phối-microservice-microservice-composition&quot;&gt;Quyết định thứ ba: Xử lý điều phối microservice (Microservice Composition)&lt;/h1&gt;

&lt;p&gt;Ở đây, “composition” có nghĩa là “cách để kết nối nhiều microservice khác nhau vào một luồng để trả về thứ mà end-user muốn.&lt;/p&gt;

&lt;p&gt;Hầu hết luồng composition trong SOA trông giống sơ đồ sau. Có một server trung tâm chạy workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*HWkqQd1NRu1hgeukxq3HUw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Các composition của SOA sử dụng một server trung tâm (ví dụ như ESB hay một engine workflow). MSA không tán thành với cách làm của ESB (ví dụ trong &lt;a href=&quot;http://devops.com/2015/07/06/top-5-anti-esb-arguments-devops-teams/&quot;&gt;Top 5 Anti-ESB Arguments for DevOps Teams&lt;/a&gt;). Một mặt khác, &lt;a href=&quot;https://www.voxxed.com/blog/2015/01/good-microservices-architectures-death-enterprise-service-bus-part-one/&quot;&gt;Do Good Microservices Architectures Spell the Death of the Enterprise Service Bus?&lt;/a&gt; đưa ra một quan điểm trái ngược.&lt;/p&gt;

&lt;p&gt;TÔi không dự định đi sâu vào ESB flight trong bài viết này. Tuy nhiên, tôi muốn thảo luận xem liệu chúng ta có cần một server trung tâm để làm việc kết hợp các microservice hay không. Có khá nhiều cách để làm việc kết hợp các microservices.&lt;/p&gt;

&lt;h2 id=&quot;cách-tiếp-cận-1-dẫn-luồng-từ-client&quot;&gt;Cách tiếp cận 1: Dẫn luồng từ Client&lt;/h2&gt;

&lt;p&gt;Sơ đồ sau cho thấy cách tiếp cận để làm microservice mà không sử dụng server trung tâm. Browser ở client xử lý luồng. Bài viết &lt;a href=&quot;http://www.infoq.com/presentations/domain-service-aggregator&quot;&gt;Domain Service Aggregators: A Structured Approach to Microservice Composition&lt;/a&gt; là một ví dụ của cách tiếp cận này.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*9WiMk5CdA2v1fW1FH_3Wfg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cách tiếp cận này có nhiều vấn đề:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bây giờ nhiều lời gọi sẽ cần phải thực hiện bởi client. Vì vậy, nếu client có một kết nối mạng chậm, mà đây là trường hợp thường thấy, mô hình thực thi sẽ bị chậm.&lt;/li&gt;
  &lt;li&gt;Thêm mối quan tâm về bảo mật khi các logic chạy dưới browser (Tôi có thể hack app của tôi để cho tôi một khoản vay)&lt;/li&gt;
  &lt;li&gt;Các ví dụ trên tập trung vào một website, nhưng hầu hết các kết hợp phức tạp thường đến từ nhiều trường hợp khác. Vì vậy khả năng ứng dụng nói chung của composition chưa được mô tả.&lt;/li&gt;
  &lt;li&gt;Lưu trữ trạng thái ở đâu đây? Liệu client có thể được tin tưởng để được nắm giữ việc lưu trữ trạng thái trong workflow? Mặc dù việc mô hình hóa các trạng thái với REST là khả thi, nhưng nó cũng là một việc phức tạp.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cách-tiếp-cận-2-choreography&quot;&gt;Cách tiếp cận 2: Choreography&lt;/h2&gt;

&lt;p&gt;Cách tiếp cận này điều khiển luồng từ một khu vực trung tâm gọi là orchestration. Tuy nhiên, đó không phải là cách duy nhất để định vị các thành phần để thực hiện công việc. Ví dụ, trong một buổi khiêu vũ, không có một người nào chỉ đạo biểu diễn. Thay vào đó, mỗi vũ công theo sát người gần nhất và tiến hành đồng bộ. Choreography áp dụng cùng ý tưởng vào business model.&lt;/p&gt;

&lt;p&gt;Cách implement điển hình nhất là dùng một hệ thống event, mỗi hệ thống tham gia vào quy trình lắng nghe một vài event khác nhau và làm công việc riêng của họ. Mỗi hành động sẽ sinh ra một event bất đồng bộ trigger hệ thống liên quan tham gia vào luồng. Các môi trường như RxJava hay Node.js sử dụng programming model này.&lt;/p&gt;

&lt;p&gt;Ví dụ, giả sử rằng một quy trình vay nợ bao gồm một yêu cầu vay nợ, một bước kiểm tra tín dụng, kiểm tra các dư nợ khác, một bước quản lý phê duyệt và một thông báo quyết định cuối cùng. Bức tranh sau đây cho thấy cách hiện thực hóa quy trình này bằng choreography. Yêu cầu được đặt trong một hàng đợi, được thu nhặt bởi actor tiếp theo, và đưa kết quả của nó vào hàng đợi kế tiếp cho actor kế tiếp, quy trình tiếp diễn cho tới khi nó được hoàn thành.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*kNPGVUGpWyoiuNTcgE9QNw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Choreography như một buổi khiêu vũ. Cả hai đều phức tạp và phải luyện tập nhiều để thực hiện một cách chính xác. Ví dụ, lập trình viên không biết khi nào quy trình hoàn thành, nếu lỗi xảy ra hay quy trình gặp trục trặc. Choreography yêu cầu phải theo dõi khắt khe để theo sát quy trình, phục hồi và thông báo ngay khi gặp lỗi.&lt;/p&gt;

&lt;p&gt;Một mặt khác, Choreography tạo ra các hệ thống khá độc lập với nhau, đó là lợi điểm chính của nó. Ví dụ, có thể thêm một actor mới vào quy trình mà không thay đổi các actor khác. Thông tin thêm xem ở bài viết &lt;a href=&quot;https://www.thoughtworks.com/insights/blog/scaling-microservices-event-stream&quot;&gt;Scaling Microservices with an Event Stream (Nhân rộng Microservices với một Event Stream)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;cách-tiếp-cận-3-server-tập-trung&quot;&gt;Cách tiếp cận 3: Server tập trung&lt;/h2&gt;

&lt;p&gt;Lựa chọn đơn giản nhất sau cùng là một server tập trung (còn được gọi là orchestration)&lt;/p&gt;

&lt;p&gt;Các implement của SOA sử dụng hai phương thức: ESB hay Bussiness Processes. MSA đề xuất một API Gateway (ví dụ: &lt;a href=&quot;http://www.infoq.com/articles/microservices-intro&quot;&gt;Microservices: Decomposing Applications for Deployability and Scalability (Microservices: Phân rã ứng dụng để dễ deploy và scale)&lt;/a&gt;). Tôi đoán API Gateway nhẹ tải hơn và sử dụng các công nghệ như REST/JSON. Tuy nhiên, trong một ý nghĩa kiến trúc thuần túy, tất cả kiểu orchestration trên được sử dụng với một server tập trung.&lt;/p&gt;

&lt;p&gt;Một vài biến thể khác của server tập trung là “backend for frontends” (BEF), trong đó xây dựng một API server-side với mỗi loại client (ví dụ: một cho desktop, một cho iOs). Mô hình này tạo ra nhiều API khác nhau với mỗi loại client, tối ưu cho từng trường hợp. Tham khảo mô hình: &lt;a href=&quot;http://samnewman.io/patterns/architectural/bff/&quot;&gt;Backends For Frontends for more information&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Đừng rối trí với những lựa chọn trên và hãy bắt đầu với API Gateway bởi lẽ nó là cách tiếp cận trực tiếp nhất. Ta có thể chuyển sang các lựa chọn phức tạp khác khi có nhu cầu.&lt;/p&gt;

&lt;h1 id=&quot;quyết-định-thứ-tư-tránh-dependency-hell&quot;&gt;Quyết định thứ tư: Tránh Dependency Hell&lt;/h1&gt;

&lt;p&gt;Mục đích của MSA là cho phép các dịch vụ có thể phát hành và triển khai độc lập với nhau. Để làm được điều đó, ta phải tránh được dependency hell.&lt;/p&gt;

&lt;p&gt;Cùng xem thử microservice “A” với API “A1” đã nâng cấp thành API “A2”. Bây giờ có hai trường hợp xảy ra:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Microservice B phải gửi messenge chuẩn bị cho A1 đến A2. Hỗ trợ được trường hợp này là có tính tương thích ngược.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Microservice A có thể quay ngược lại về A1, và microservice C cũng có thể tiếp tục gửi message chuẩn bị cho A2 đến A1.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nếu các microservices được release độc lập, bạn phải xử lý các tình huống trên. Nếu không, tất cả nỗ lực xây dựng MSA của bạn đã bị lãng phí.&lt;/p&gt;

&lt;p&gt;Thông thường, xử lý các tình huống trên liên quan đến việc thêm các tham số phụ và không bao giờ đổi tên hay bỏ các tham số đã từng tồn tại. Các tình huống phức tạp hơn đều có thể xảy ra.&lt;/p&gt;

&lt;p&gt;Bài viết &lt;a href=&quot;http://www.infoq.com/news/2015/06/taming-dependency-hell&quot;&gt;“Taming Dependency Hell” within Microservices with Michael Bryzek (“Thuần hóa Dependency Hell” trong Microservices với Michael Bryzek)&lt;/a&gt; thảo luận chi tiết về vấn đề này. &lt;a href=&quot;https://news.ycombinator.com/item?id=9705098&quot;&gt;Ask HN: How do you version control your microservices? (Hỏi đáp Hacker News: Bạn quản lý version cho microservice như thế nào?)&lt;/a&gt; cũng là một tài liệu tốt&lt;/p&gt;

&lt;p&gt;Cuối cùng, hỗ trợ tương thích ngược và xuôi nên được ràng buộc thời gian để tránh phức tạp hóa. Ví dụ, ta có một nguyên tắc rằng không microservice nào nên sử dụng một API quá ba tháng tuổi. Điều này giúp developer của microservice có thể drop các luồng code hỗ trợ phiên bản cũ.&lt;/p&gt;

&lt;p&gt;Cuối cùng, tôi muốn khoa trương một tí về sơ đồ dependency của ta nên như thế nào trong kiến trúc microservice.&lt;/p&gt;

&lt;p&gt;Một lựa chọn là gọi thoải mái microservice khác bất kỳ khi nào cần thiết. Điều đó tạo ra một kiến trúc spaghetti từ thời tiền ESB. Và tôi không phải là fan hâm mộ của mô hình đó.&lt;/p&gt;

&lt;p&gt;Một điểm cực khác là rằng microservice không nên gọi microservice khác và tất cả kết nối phải nên thực hiện thông qua API gateway và message bus. Điều này sẽ dẫn tới một mô hình cây một cấp. Ví dụ, thay vì để microservice A gọi B, chúng ta sẽ đem kết quả từ microservice A tới gateway, nơi sẽ gọi B với kết quả đó. Đây là mô hình orchestration. Hầu hết các business logic bây giờ sẽ nằm ở gateway. Và vâng, điều này làm gateway phình to ra.&lt;/p&gt;

&lt;p&gt;Đề nghị của tôi là hoặc chúng ta đi theo mô hình orchestration hoặc là làm việc cật lực hơn để cài đặt choreography đúng cách. Đúng rồi, tôi đang đề nghị rằng không nên làm theo kiểu spaghetti đấy.&lt;/p&gt;

&lt;h1 id=&quot;kết-luận&quot;&gt;Kết luận&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Lời tác giả&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Mục đích của Microservices là tách rời các thành phần, giữ tính loose coupling. Một kiến trúc microservice được thiết kế cẩn thận sẽ giúp ta implement một project sử dụng một tập hợp các microservice, với mỗi thành phần được quản lý, phát triển và release độc lập nahu.&lt;/p&gt;

&lt;p&gt;Khi thiết kế với microservices, ta phải để mắt đến mục tiêu cuối cùng, chính là “loose coupling”. Có khá nhiều thách thức trên con đường đó và bài viết này trả lời những câu hỏi sau:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Tôi nên giải quyết tình huống phải chia sẻ dữ liệu giữa hai microservice như thế nào?&lt;/li&gt;
  &lt;li&gt;Tôi nên làm thế nào để phát triển các API microservice mà vẫn giữ được tính “loose coupling”?&lt;/li&gt;
  &lt;li&gt;Làm thế nào để xử lý bảo mật?&lt;/li&gt;
  &lt;li&gt;Làm thế nào để điều hành các microservice?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cảm ơn! Tôi muốn nghe suy nghĩ của bạn sau khi đọc bài này.&lt;/p&gt;

&lt;p&gt;Nếu bạn thích bài viết này, tôi nghĩ là những bài viết sau cũng khá thú vị đấy:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/multi-tenancy-after-10-years-of-cloud-computing-19de782ef899&quot;&gt;Multi-tenancy after 10 years of Cloud Computing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/systems-architectures/distributed-caching-woes-cache-invalidation-c3d389198af3&quot;&gt;Distributed Caching Woes: Cache Invalidation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Đồng thời, hãy ghé thăm &lt;a href=&quot;https://iwringer.wordpress.com/&quot;&gt;bài viết nhiều lượt đọc nhất&lt;/a&gt; và &lt;a href=&quot;https://www.slideshare.net/hemapani/presentations&quot;&gt;bài diễn văn này&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/playlist?list=PLfcx6fgWEvUPhSpOfMOW4xN9H9djROBDi&quot;&gt;(video)&lt;/a&gt; của tôi. Liên lạc tôi qua (@srinath_perera)(https://twitter.com/srinath_perera?lang=en) và tìm tôi ở &lt;a href=&quot;http://people.apache.org/~hemapani/&quot;&gt;đây&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 27 Jan 2019 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2019/01/27/four-decisions-microservices/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2019/01/27/four-decisions-microservices/</guid>
        
        
      </item>
    
      <item>
        <title>Spark RDD</title>
        <description>&lt;p&gt;&lt;em&gt;Bài viết gốc: https://medium.com/pyladies-taiwan/python-%E7%9A%84-import-%E9%99%B7%E9%98%B1-3538e74f57e3&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Học cách quản lý project Python là một điều cần thiết khi chúng ta làm việc với các class của Python và sẵn sàng xây dựng các dự án lớn hơn. Các module tự viết và module được Python cung cấp là những thành phần cơ bản trong kiến trúc, nhưng để sử dụng các hàm và class trong module, chúng ta phải import các module vào nhau, sử dụng lại code đã được viết trước đó. Nếu không chú ý, chúng ta sẽ dễ dàng rơi vào các bẫy import hỗn loạn.&lt;/p&gt;

&lt;p&gt;Bài viết sẽ trình bày về kiến thức cơ bản về module và package, đồng thời chỉ một vài khác biệt của absolutely import và relatively import, cuối cùng trình bày một số lỗi phổ biến trong quá trình import. Lưu ý: Bài viết đang trình bày trên Python3&lt;/p&gt;

&lt;h1 id=&quot;module-và-package&quot;&gt;Module và Package&lt;/h1&gt;

&lt;p&gt;Về cơ bản, một file Python chính là một module. Chúng ta có thể define các class, function và biến trong đó. Nếu xem một module Python là một tập tin, thì một package là một thư mục. Các package có thể có các package con và các module để project của chúng ta dễ quản lý và có tổ chức hơn, cuối cùng, ta có thể đóng gói project và phân phối cho những người khác sử dụng&lt;/p&gt;

&lt;p&gt;Đầu tiên hãy tìm hiểu về module. Giả sử có một module sample_module.py define hàm sample_func như sau:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sample_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bây giờ có bạn đang có một module sample_module_import khác trong cùng thư mục muốn sử dụng lại function này, lúc này chúng ta có thể import trực tiếp sample_module như sau:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sample_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chạy &lt;code class=&quot;highlighter-rouge&quot;&gt;python3 sample_module_import&lt;/code&gt;, ta có kết quả:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kế đến là package, chúng ta sẽ đưa hai tập tin trên vào cùng một thư mục tên là sample_package, tổ chức như bên dưới&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sample_package/
├── __init__.py
├── sample_module.py
└── sample_module_import.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;File &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; ở đây vô cùng quan trọng, mặc dù không có nội dung gì, nhưng chúng ta vẫn phải đặt nó ở đấy để thông báo rằng nó là một package.&lt;/p&gt;

&lt;p&gt;Lúc này, nếu chúng ta vào trong thư mục trên chạy câu lệnh như trên thì cũng được kết quả tương tự. Nhưng vì tất cả đã được đóng thành một package, chúng thường sẽ được import ở nhiều nơi trong project. Lúc này việc sử dụng import sẽ hơi khác.&lt;/p&gt;

&lt;p&gt;Chúng ta sẽ thử thay đổi file sample_package/sample_module_import.py một tí. Giả như chúng ta đang ở trên thư mục cha của sample_package và chạy các lệnh sau：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. python3 sample_package/sample_module_import.py
2. python3 -m sample_package.sample_module_import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Những cách import dưới đây sẽ cho ra kết quả gì?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# relative import ngầm không đúng chuẩn cú pháp của Python (Python3 không hỗ trợ)
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sample_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ấ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ModuleNotFoundError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ì&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Python3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ỗ&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ợ&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ng&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ầ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ph&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ướ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đặ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ấ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ấ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ó&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ư&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;absolute&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ứ&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ớ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vi&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ế&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đú&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# relative import ngầm đúng chuẩn cú pháp của Python (Python3 không hỗ trợ)
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.sample_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Kh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ạ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đượ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ì&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ộ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ứ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ộ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đườ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ẫ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ươ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đố&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ể&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đượ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ự&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ự&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ế&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ó&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ỉ&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ó&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ể&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đượ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tham&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chi&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ế&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ư&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ộ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ấ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# absolute import đúng chuẩn
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sample_package.sample_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ế&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;đườ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ẫ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kh&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ằ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trong&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;á&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ẽ&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ấ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ạ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Th&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;à&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ô&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ấ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chúng ta sẽ nói rõ thêm về absolute import và relative import ngay sau đây:
Lệnh -m trong câu lệnh thực thi là để Python import trước package hay module mà ta cần, sau đó bắt đầu chạy. Vì vậy khi sample_module_import đang chạy, nó sẽ tìm các module dựa theo sample_package nên những lần import trên sẽ thành công.
Ngoài ra, python path là nơi mà Python sẽ sử dụng để tìm kiếm các module, là vị trí thư mục đặt các module chuẩn. Vì vậy, trong các thứ 3, Python sẽ đưa ra lỗi vì nó không thể tìm thấy sample_package.sample_module trong python path. Chúng ta có thể thêm thư mục hiện tại vào sys.path, chính là đường dẫn Python (được khởi tạo từ biến môi trường PYTHONPATH), để Python có thể tìm được module này, nhưng phương pháp này rất tệ và khó có thể bảo trì được, hầu hết được sử dụng để debug, các trường hợp khác cực kỳ không được khuyến khích.&lt;/p&gt;

&lt;h1 id=&quot;cú-pháp-import-cơ-bản&quot;&gt;Cú pháp import cơ bản&lt;/h1&gt;

&lt;p&gt;Như đã giới thiệu ở trên, tôi sẽ giới thiệu nó ở đây. Nếu ta muốn sử dụng các function, class hay variable trong module khác, ta sẽ phải import chúng trước khi sử dụng. Các module thường được import trên đầu file, nhưng không bắt buộc phải như vậy.&lt;/p&gt;

&lt;h2 id=&quot;cách-1-import-module&quot;&gt;Cách 1: import [module]&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Import toàn bộ module random
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Sử dụng hàm randint của module random
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cách-2from-module-import-name1-name2-&quot;&gt;Cách 2：from [module] import [name1, name2, …]&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Từ trong module random import chỉ một hàm randint
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Không giống như cách trên, lúc sử dụng randint, ta không cần thêm tiền tố random
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;##Cách 3：import [module] as [new_name]&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Import toàn bộ module random
# Nhưng tên của module này có thể xung đột với module khác, nên ta đổi tên nó thành rd
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rd&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Sử dụng rd thay vì random
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cách-4--from-module-import-&quot;&gt;Cách 4 : from [module] import *&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Import toàn bộ mọi thứ trong module random
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Sử dụng randint không cần tiền tố random
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Cách 4 cực kỳ không khuyến khích vì dễ gây xung đột tên, gây khó đọc và bảo trì code&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;absolute-import-vs-relative-import&quot;&gt;Absolute Import v.s. Relative Import&lt;/h1&gt;

&lt;p&gt;Python có hai cách import，absolute import và relative import. Absolute import sử dụng toàn bộ đường dẫn module，relative import chỉ sử dụng đường dẫn module tương đối trong package hiện tại.&lt;/p&gt;

&lt;p&gt;Ta sử dụng relative import khi có lúc cần thay đổi cấu trúc của project, các package và module bên trong bị thay đổi. Lúc này nếu các package bên trong sử dụng relative import, quan hệ tương đối của chúng sẽ không thay đổi, không cần phải import lại từng module với đường dẫn mới. Nhưng vì relative import phụ thuộc vào package hiện tại, nó sẽ gây ra nhiều kết quả khác nhau khi thực thi. Khi bạn vô tình tạo ra một loạt lỗi thì absolute import giảm được rất nhiều rắc rối.&lt;/p&gt;

&lt;p&gt;Tham khảo cấu trúc sau của PEP328. Kiến trúc của package được trình bày như sau:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subpackage1&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;└──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subpackage2&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;├──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;└──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleZ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;└──&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bây giờ giả sử package/subpackage1/moduleX.py muốn import một vài thứ khác từ module khác, hãy sử dụng cú pháp sau ([A] đại diện cho absolute import, [R] đại diện relative import):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Import module họ hàng `moduleY` dưới cùng package
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package.subpackage1&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleY&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleY&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.moduleY&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Import hàm spam từ module họ hàng `moduleY` dưới cùng package
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package.subpackage1.moduleY&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spam&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.moduleY&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spam&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Import hàm eggs từ module bà con moduleZ dưới cùng package
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package.subpackage2.moduleZ&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eggs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..subpackage2.moduleZ&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eggs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Import moduleA từ package cha
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleA&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ho&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ặ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;moduleA&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;những-bẫy-import-thường-gặp&quot;&gt;Những bẫy import thường gặp&lt;/h1&gt;

&lt;h2 id=&quot;trap-1-circular-import&quot;&gt;Trap 1: Circular Import&lt;/h2&gt;

&lt;p&gt;Tưởng tượng 1 module A lúc bắt đầu cần import một số thứ trong một module B khác, nhưng bạn cũng phải thực thi 1 số thứ trước khi import module B. Đồng thời, không may là module B cũng cần phải import 1 số thứ từ module A. Nhưng module A lúc nãy vẫn đang được thực thi, các chức năng của module chưa được hoàn thiện, nên chưa cho phép module B sử dụng. Thế deadlock này là một dạng thường gặp của circular import&lt;/p&gt;

&lt;p&gt;Hãy cùng theo dõi ví dụ sau. Hiện tại ta đang có hai module A và B trong cùng package muốn giao tiếp với nhau với nội dung như sau:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.B&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_greet_back&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;A_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;B_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A says hello back!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;B.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.A&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello back!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nội dung hai file này khá tương đồng, chỉ tráo đổi A/B. Ta sẽ để B chạy trước trong cùng package.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; sample_package.B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kết quả nhận được như sau:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;193&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_run_module_as_main&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod_spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_run_code&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run_globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/sample_package/B.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.A&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/sample_package/A.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.B&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_greet_back&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/sample_package/B.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.A&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ImportError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A_greet_back'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Theo quan sát, B cố gắng import A_greet_back, nhưng chuyển sang thực thi A và vì chương trình Python được thông dịch từng dòng từ đầu vì vậy ta bắt gặp lệnh import lại B trước khi define được A_greet_back và rơi vào ngõ cụt.&lt;/p&gt;

&lt;p&gt;Các cách phổ biến để xử lý circular import này là:&lt;/p&gt;

&lt;h3 id=&quot;1-nhập-toàn-bộ-module-thay-vì-một-thuộc-tính&quot;&gt;1. Nhập toàn bộ module thay vì một thuộc tính&lt;/h3&gt;

&lt;p&gt;Chỉnh sửa &lt;code class=&quot;highlighter-rouge&quot;&gt;B.py&lt;/code&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# from .A import A_greet_back
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# A_greet_back()
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Và ta đã xong việc&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;B says hello!
A says hello back!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nguyên nhân là, câu lệnh from .A import A_greet_back yêu cầu phải tìm được định nghĩa của A_greet_back trong object module A, nhưng object này vẫn còn trống vào lúc này. Sau khi chỉnh sửa, from . import A chỉ kiểm tra object module A có tồn tại hay không, A_greet_back chỉ cần tồn tại lúc nó cần được thực thi.&lt;/p&gt;

&lt;h3 id=&quot;2-trì-hoãn-việc-import&quot;&gt;2. Trì hoãn việc import&lt;/h3&gt;

&lt;p&gt;Chỉnh sửa &lt;code class=&quot;highlighter-rouge&quot;&gt;B.py&lt;/code&gt; như sau:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Xóa hết phần trên
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.A&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Công việc cũng sẽ thực hiện thành công. Tương tự như lúc trước, Python cũng sẽ import module A khi chạy dòng này, nhưng tại thời điểm này, module B đã hoàn tất việc load, không có vấn đề gì về circular import. Nhưng phương pháp này hơi có vẻ hacky, có lẽ chỉ có thể tìm thấy trong các cuộc thi hackathon. Vì đây có thể gây nguy hiểm chí mạng, nếu tồn tại những dòng code khó bảo trì như thế này trong project chính thức.&lt;/p&gt;

&lt;p&gt;Một mặt khác, việc đưa tất cả import xuống cuối file cũng có tác dụng tương tự, nhưng cũng gây ảnh hưởng như trên.&lt;/p&gt;

&lt;h3 id=&quot;3-cài-đặt-rõ-ràng-kiến-trúc-tránh-circular-import&quot;&gt;3. Cài đặt rõ ràng kiến trúc, tránh circular import&lt;/h3&gt;

&lt;p&gt;Vâng, phương pháp chữa bệnh hữu hiệu vẫn là đặt câu hỏi vì sao code của bạn lại trong tình trạng nguy hiểm như thế này và sau đó thì refactor lại code.&lt;/p&gt;

&lt;h2 id=&quot;trap-2-relative-import-above-top-level-package&quot;&gt;Trap 2: Relative Import above Top-level Package&lt;/h2&gt;

&lt;p&gt;Những người không quen thuộc với relative import thường sẽ gặp lỗi này.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attempted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;beyond&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chúng ta hãy thử reproduce lại lỗi này nhé. Chỉnh sửa file B.py như sau:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# from . import A
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..sample_package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bây giờ, chúng ta đang ở cùng thư mục với sample_package, chạy câu lệnh.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python3 -m sample_package.B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ta sẽ gặp lỗi&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;193&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_run_module_as_main&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod_spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_run_code&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run_globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/sample_package/B.py&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..sample_package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attempted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;beyond&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cái gọi là top-level package tức là lớp cao nhất của package ta đang thực thi. Không được phép relative import vượt quá lớp này, lỗi xảy ra do ..sample_package cố gắng nhảy lên 1 cấp trên sample_package.&lt;/p&gt;

&lt;p&gt;Bạn có thể thử di chuyển lên thư mục phía trên (cd .. ), giả sử đó là parent_folder và sau đó thử &lt;code class=&quot;highlighter-rouge&quot;&gt;python3 -m parent_folder.sample_package.B&lt;/code&gt;, bạn sẽ thấy lỗi trên biến mất, đó là do package cấp cao nhất hiện giờ đã trở thành parent_folder.&lt;/p&gt;

&lt;h1 id=&quot;kết-luận&quot;&gt;Kết luận&lt;/h1&gt;

&lt;p&gt;import là tính năng bắt buộc phải có của tất cả các ngôn ngữ lớn. Nó có vẻ đơn giản nhưng tiềm ẩn khá nhiều bẫy. Nếu bạn không biết các hoạt động của import của Python, ngoại trừ việc khó thiết kế linh hoạt trong kiến trúc tổng thể project, còn tăng khả năng rơi vào các lỗi khủng khiếp hơn.&lt;/p&gt;

&lt;p&gt;Code mẫu tham khảo: https://github.com/pyliaorachel/python-import-traps&lt;/p&gt;

&lt;h1 id=&quot;tài-liệu-tham-khảo&quot;&gt;Tài liệu tham khảo&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/tutorial/modules.html&quot;&gt;Python Documentation — Modules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/reference/import.html&quot;&gt;Python Documnetation — the Import System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/python/python_modules.htm&quot;&gt;tutorialspoint — Python Modules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328/#guido-s-decision&quot;&gt;PEP328 — Imports: Multi-Line and Absolute/Relative&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://effbot.org/zone/import-confusion.htm&quot;&gt;Importing Python Modules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blog.pythonlibrary.org/2016/03/01/python-101-all-about-imports/&quot;&gt;Python 101: All about imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 06 Jan 2019 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2019/01/06/python-import-trap/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2019/01/06/python-import-trap/</guid>
        
        
        <category>paragraph</category>
        
        <category>feature photo</category>
        
      </item>
    
      <item>
        <title>Spark RDD</title>
        <description>&lt;h1 id=&quot;low-level-api-của-spark&quot;&gt;Low-level API của Spark&lt;/h1&gt;

&lt;h2 id=&quot;chúng-là-gì&quot;&gt;Chúng là gì?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;bao gồm các Resilient Distributed Dataset (RDDs) có chứng năng điều khiển, sử dụng các dữ liệu phân tán&lt;/li&gt;
  &lt;li&gt;Các biến broadcast và các accumulator chuyên phân phối và xử lý các biến chia sẻ phân tán&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/ywMrsDfVaX9G6A6aYRK_HTSu3NJ78ahUAPtr-7B2kUufZ6R5hQ7O0y0R40wru-n6Ula9Q_ONaY-IHptITWxcVairoyvvUWcePVRhFJZp2KbqoUhdPTmxu2BLeCa--HxUc7HMPedZ&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;khi-nào-nên-sử-dụng&quot;&gt;Khi nào nên sử dụng?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Khi chúng ta cần phải xử lý các chức năng không thể làm được trong các API high-level
Vd: cần xử lý dữ liệu ở tầng vật lý - chủ động phân phối dữ liệu giữa các cluster&lt;/li&gt;
  &lt;li&gt;Chỉnh sửa một số codebase tầng thấp viết bằng RDD&lt;/li&gt;
  &lt;li&gt;Thực hiện một số công việc yêu cầu sử dụng các biến chia sẻ custom giữa các cluster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Trong đa số trường hợp, sử dụng DataFrame sẽ hiệu quả hơn, ổn định hơn nhưng cũng tốn kém hơn so với RDD&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;tại-sao-cần-quan-tâm-đến-chúng&quot;&gt;Tại sao cần quan tâm đến chúng?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Thật sự tất cả công việc sử dụng Spark rồi sẽ được biên dịch xuống thành các thành phần cơ bản. Các transformation trên DataFrame rồi cũng sẽ được biên dịch thành các transformation trên RDD&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sử-dụng-chúng-như-thế-nào&quot;&gt;Sử dụng chúng như thế nào?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;SparkContext sẽ là đầu vào của các chức năng liên quan đến các API low-level. SparkContext có thể được truy xuất thông qua SparkSession - công cụ mà chúng ta sử dụng để thực hiện tính toán giữa các cluster của Spark.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;về-rdd&quot;&gt;Về RDD&lt;/h1&gt;

&lt;h2 id=&quot;các-loại-rdd&quot;&gt;Các loại RDD&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://jaceklaskowski.gitbooks.io/mastering-apache-spark/diagrams/spark-rdds.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Các RDD biểu diễn một tập hợp cố định, đã được phân vùng các record để có thể xử lý song song&lt;/li&gt;
  &lt;li&gt;Các record trong RDD có thể là đối tượng Java, Scale hay Python tùy lập trình viên chọn. Không giống như DataFrame, mỗi record của DataFrame phải là một dòng có cấu trúc chứa các field đã được định nghĩa sẵn.&lt;/li&gt;
  &lt;li&gt;RDD đã từng là API chính được sử dụng trong series Spark 1.x và vẫn có thể sử dụng trong version 2.X nhưng không còn được dùng thường xuyên nữa&lt;/li&gt;
  &lt;li&gt;RDD API có thể được sử dụng trong Python, Scala hay Java
    &lt;ul&gt;
      &lt;li&gt;Scala và Java: Perfomance tương đương trên hầu hết mọi phần. (Chi phí lớn nhất là khi xử lý các raw object)&lt;/li&gt;
      &lt;li&gt;Python: Mất một lượng performance, chủ yếu là cho việc serialization giữa tiến trình Python và JVM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lưu-ý-khi-sử-dụng-rdd&quot;&gt;Lưu ý khi sử dụng RDD&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Vì Spark không nhiều cấu trúc nội hàm của record như các API có cấu trúc khác nên&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rất mạnh nhưng cũng tiềm tàng nhiều nguy cơ&lt;/li&gt;
  &lt;li&gt;Các object có thể chứa bất kỳ thông tin gì dưới bất kỳ format nào&lt;/li&gt;
  &lt;li&gt;Các cách xử lý và tương tác với các giá trị phải được thực hiện thủ công&lt;/li&gt;
  &lt;li&gt;Việc tối ưu hóa yêu cầu phải làm rất nhiều công việc thủ công&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;các-loại-rdd-1&quot;&gt;Các loại RDD&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Có rất nhiều lớp con của RDD, hầu hết chúng là để cho DataFrame có thể tạo và tối ưu hóa các execution plan trên tầng vật lý (Xem cách hoạt động của Spark…)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Người dùng thường chỉ sử dụng hai loại RDD sau:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Generic RDD&lt;/li&gt;
      &lt;li&gt;Key-value RDD&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Key-value RDD có nhiều hàm hỗ trợ đặc biệt cũng như hỗ trợ phân hoạch custom bằng key&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thuộc-tính-của-rdd&quot;&gt;Thuộc tính của RDD&lt;/h2&gt;

&lt;p&gt;Bắt buộc:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Một danh sách các partitions&lt;/li&gt;
  &lt;li&gt;Một hàm để tính toán các split&lt;/li&gt;
  &lt;li&gt;Một danh sách dependencies với RDD khác&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Không bắt buộc:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Một partitioner đối với RDD key-value (Trong trường hợp RDD được hash-partitioned)&lt;/li&gt;
  &lt;li&gt;Một danh sách các vị trí lưu trữ để tính toán các split (Ví dụ như các block của HDFS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tạo-một-rdd&quot;&gt;Tạo một RDD&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Cách đơn giản nhất: Tạo từ một DataFrame hay Dataset
    &lt;ul&gt;
      &lt;li&gt;Java hay Scala: Từ Dataset[T] có thể chuyển qua RDD[T]&lt;/li&gt;
      &lt;li&gt;Python: Chỉ có thể chuyển từ DataFrame[Row] sang RDD[Row]
Đồng thời ta cũng có thể chuyển đổi theo chiều ngược lại&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tạo từ một Local Collection: Sử dụng hàm parallelize trên SparkContext để chuyển một collection single node sang một collection parallel&lt;/li&gt;
  &lt;li&gt;Tạo từ các Data Source: RDD không có khái niệm “Data Source APIs” vì chúng chủ yếu define các cấu trúc dependencies giữa các partition. Ta có thể tạo một RDD với mỗi dòng của text file là một record hay cả text file là một record duy nhất.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;các-transformation-và-action-với-rdd&quot;&gt;Các transformation và action với RDD&lt;/h1&gt;

&lt;p&gt;RDD cung cấp các transformation và action hoạt động giống như DataFrame lẫn DataSets. Transformation xử lý các thao tác lazily và action xử lý thao tác ngay.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/11-150526111122-lva1-app6891/95/11-from-hadoop-to-spark-12-43-638.jpg?cb=1433608610&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;một-số-transformation&quot;&gt;Một số transformation&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Nhiều phiên bản transformation của RDD có thể hoạt động trên các Structured API, transformation xử lý lazily, tức là chỉ giúp dựng execution plans, dữ liệu chỉ được truy xuất thực sự khi thực hiện action&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;distinct: loại bỏ trùng lắp trong RDD&lt;/li&gt;
  &lt;li&gt;filter: tương đương với việc sử dụng where trong SQL - tìm các record trong RDD xem những phần tử nào thỏa điều kiện. Có thể cung cấp một hàm phức tạp sử dụng để filter các record cần thiết - Như trong Python, ta có thể sử dụng hàm lambda để truyền vào filter&lt;/li&gt;
  &lt;li&gt;map: thực hiện một công việc nào đó trên toàn bộ RDD. Trong Python sử dụng lambda với từng phần tử để truyền vào map&lt;/li&gt;
  &lt;li&gt;flatMap: cung cấp một hàm đơn giản hơn hàm map. Yêu cầu output của map phải là một structure có thể lặp và mở rộng được.&lt;/li&gt;
  &lt;li&gt;sortBy: mô tả một hàm để trích xuất dữ liệu từ các object của RDD và thực hiện sort được từ đó.&lt;/li&gt;
  &lt;li&gt;randomSplit: nhận một mảng trọng số và tạo một random seed, tách các RDD thành một mảng các RDD có số lượng chia theo trọng số.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;một-số-action&quot;&gt;Một số action&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Action thực thi ngay các transformation đã được thiết lập để thu thập dữ liệu về driver để xử lý hoặc ghi dữ liệu xuống các công cụ lưu trữ&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;reduce: thực hiện hàm reduce trên RDD để thu về 1 giá trị duy nhất&lt;/li&gt;
  &lt;li&gt;count: đếm số dòng trong RDD&lt;/li&gt;
  &lt;li&gt;countApprox: phiên bản đếm xấp xỉ của count, nhưng phải cung cấp timeout vì có thể không nhận được kết quả.&lt;/li&gt;
  &lt;li&gt;countByValue: đếm số giá trị của RDD
    &lt;ul&gt;
      &lt;li&gt;chỉ sử dụng nếu map kết quả nhỏ vì tất cả dữ liệu sẽ được load lên memory của driver để tính toán&lt;/li&gt;
      &lt;li&gt;chỉ nên sử dụng trong tình huống số dòng nhỏ và số lượng item khác nhau cũng nhỏ.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;countApproxDistinct: đếm xấp xỉ các giá trị khác nhau&lt;/li&gt;
  &lt;li&gt;countByValueApprox: đếm xấp xỉ các giá trị&lt;/li&gt;
  &lt;li&gt;first: lấy giá trị đầu tiên của dataset&lt;/li&gt;
  &lt;li&gt;max và min: lần lượt lấy giá trị lớn nhất và nhỏ nhất của dataset&lt;/li&gt;
  &lt;li&gt;take và các method tương tự: lấy một lượng giá trị từ trong RDD. take sẽ trước hết scan qua một partition và sử dụng kết quả để dự đoán số lượng partition cần phải lấy thêm để thỏa mãn số lượng lấy.&lt;/li&gt;
  &lt;li&gt;top và takeOrdered: top sẽ hiệu quả hơn takeOrdered vì top lấy các giá trị đầu tiên được sắp xếp ngầm trong RDD.&lt;/li&gt;
  &lt;li&gt;takeSamples: lấy một lượng giá trị ngẫu nhiên trong RDD&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;một-số-kỹ-thuật-nâng-cao-đối-với-rdd&quot;&gt;Một số kỹ thuật nâng cao đối với RDD:&lt;/h2&gt;

&lt;h3 id=&quot;lưu-trữ-file&quot;&gt;Lưu trữ file&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Lưu trữ file có nghĩa là ghi vào các file plain-text&lt;/li&gt;
  &lt;li&gt;Có thể sử dụng các codec nén từ thư viện của Hadoop&lt;/li&gt;
  &lt;li&gt;Lưu trữ vào các database bên ngoài yêu cầu ta phải lặp qua tất cả partition của RDD - Công việc được thực hiện ngầm trong các high-level API&lt;/li&gt;
  &lt;li&gt;sequenceFile là một flat file chứa các cặp key-value, thường được sử dụng làm định dạng input/output của MapReduce. Spark có thể ghi các sequenceFile bằng các ghi lại các cặp key-value&lt;/li&gt;
  &lt;li&gt;Đồng thời, Spark cũng hỗ trợ ghi nhiều định dạng file khác nhau, cho phép define các class, định dạng output, config và compression scheme của Hadoop.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;caching---tăng-tốc-xử-lý-bằng-cache&quot;&gt;Caching - tăng tốc xử lý bằng cache&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Caching với RDD, Dataset hay DataFrame có nguyên lý như nhau.&lt;/li&gt;
  &lt;li&gt;Chúng ta có thể lựa chọn cache hay persist một RDD, và mặc định, chỉ xử lý dữ liệu trong bộ nhớ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;checkpointing---lưu-trữ-lại-các-bước-xử-lý-để-phục-hồi&quot;&gt;Checkpointing - lưu trữ lại các bước xử lý để phục hồi&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Checkpointing lưu RDD vào đĩa cứng để các tiến trình khác để thể sử dụng lại RDD point này làm partition trung gian thay vì tính toán lại RDD từ các nguồn dữ liệu gốc&lt;/li&gt;
  &lt;li&gt;Checkpointing cũng tương tự như cache, chỉ khác nhau là lưu trữ vào đĩa cứng và không dùng được trong API của DataFrame&lt;/li&gt;
  &lt;li&gt;Chúng ta sẽ cần sử dụng nhiều để tối ưu tính toán.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 05 Jan 2019 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2019/01/05/spark-rdd/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2019/01/05/spark-rdd/</guid>
        
        
        <category>paragraph</category>
        
        <category>feature photo</category>
        
      </item>
    
      <item>
        <title>Big Data Platform - Apache Beam</title>
        <description>&lt;h1 id=&quot;tổng-quát-về-apache-beam&quot;&gt;Tổng quát về Apache Beam&lt;/h1&gt;

&lt;p&gt;Apache Beam là một mô hình thống nhất, mã nguồn mở để cài đặt những pipeline xử lý song song cho dữ liệu khối hay dữ liệu dòng. Bạn có thể xây dựng một chương trình để định nghĩa pipeline nói trên bằng những công cụ Apache Beam SDK. Pipeline sau đó có thể được thực thi bởi một trong những khối back-end xử lý phân tán có hỗ trợ Beam như Apache Apex, Apache Flink, Apache Spark và Google Cloud Dataflow.&lt;/p&gt;

&lt;p&gt;Beam đặc biệt hữu ích với cách tác vụ xử lý dữ liệu xử lý ngẫu nhiên song song - Embarassingly Parallel, trong đó vấn đề có thể phân rã thành những khối dữ liệu nhỏ hơn có thể xử lý độc lập và song song với nhau. Bạn cũng có thể sử dụng Beam để trích xuất, biến đổi và tải dữ liệu vào kho dữ liệu hệ thống (Extract-Transform-Load ETL) và tích hợp dữ liệu gốc. Các công việc trên giúp di chuyển dữ liệu giữa các phương tiện lưu trữ và nguồn dữ liệu khác nhau, chuyển đổi dữ liệu vào một định dạng mong muốn, và tải dữ liệu vào một hệ thống mới.&lt;/p&gt;

&lt;h2 id=&quot;apache-beam-sdks&quot;&gt;Apache Beam SDKs&lt;/h2&gt;

&lt;p&gt;Beam hiện tại đang hỗ trợ SDK cho các ngôn ngữ sau:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Java&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Go
Đồng thời cũng hỗ trợ một Interface cho Scala là Scio&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;apache-beam-pipeline-runner&quot;&gt;Apache Beam Pipeline Runner&lt;/h2&gt;

&lt;p&gt;Những Apache Beam Pipeline Runner chịu trách nhiệm dịch pipeline xử lý dữ liệu mà bạn đã định nghĩa với chương trình Beam thành API tương thích với các hệ thống back-end xử lý dữ liệu phân tán khác. Khi chạy một chương trình Beam, bạn phải chỉ ra một runner tương thích với hệ thống back-end mà bạn muốn thực thi pipeline.&lt;/p&gt;

&lt;p&gt;Những hệ thống back-end xử lý dữ liệu phân tán mà Beam đang hỗ trợ:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Apache Apex&lt;/li&gt;
  &lt;li&gt;Apache Flink&lt;/li&gt;
  &lt;li&gt;Apache Spark&lt;/li&gt;
  &lt;li&gt;Apache Gearpump (dự án đang ấp ủ)&lt;/li&gt;
  &lt;li&gt;Apache Samza&lt;/li&gt;
  &lt;li&gt;Google Cloud Dataflow&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;những-khái-niệm-cơ-bản-trong-beam&quot;&gt;Những khái niệm cơ bản trong Beam&lt;/h1&gt;
&lt;p&gt;Tham khảo: https://beam.apache.org/documentation/programming-guide/&lt;/p&gt;

&lt;p&gt;Để sử dụng Beam, bạn phải xây dựng một chương trình Driver bằng một trong những SDK của Beam. Chương trình Driver này định nghĩa tất cả các dữ liệu nhận vào, các bước biến đổi trung gian và dữ liệu xuất ra. Đồng thời nó cũng thiết lập những thông số và runner để thực thi cho pipeline (thông thường được truyền bằng command line).&lt;/p&gt;

&lt;p&gt;SDK Beam cài đặt sẵn các lớp xử lý để đơn giản hóa cơ chế xử lý dữ liệu phân tán có thể mở rộng lớn. Các lớp xử lý của Beam hoạt động như nhau trên cả nguồn dữ liệu khối (batch) và dòng (stream). Khi tạo một pipeline Beam, chúng ta phải hiểu rằng những tác vụ xử lý dữ liệu của chúng ta đang hoạt động dưới những lớp xử lý này. Nó bao gồm:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Pipeline: đóng gói toàn bộ tác vụ xử lý dữ liệu từ đầu đến cuối. Bao gồm cả đọc dữ liệu đầu vào, biến đổi dữ liệu đó và ghi dữ liệu đầu ra. Tất cả chương trình Beam phải tạo một Pipeline. Khi tạo một Pipeline, ta cũng phải chỉ ra tùy chọn thực thi để cho Pipeline biết nên chạy ở đâu và chạy như thế nào.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PCollection: mô tả một tập dữ liệu phân tán mà Beam pipeline đang thao tác. Tập dữ liệu có thể cố định, như từ những nguồn cố định như file, hay không cố định như từ những nguồn cập nhật liên tục qua subscription hay những cơ chế khác. Pipeline thông thường sẽ tạo một PCollection khởi đầu bằng các đọc dữ liệu từ khác nguồn bên ngoài, nhưng ta cũng có thể tạo một PCollection từ dữ liệu trong bộ nhớ ngay trong chương trình. Như vậy, các PCollection có thể là dữ liệu đầu vào và đầu ra cho mỗi bước trung gian trong pipeline.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PTransform: mô tả một quá trình xử lý dữ liệu, hay một bước, trong pipeline. Mỗi PTransform nhận vào một hoặc nhiều object PCollection làm input và thực hiện những hàm xử lý mà ta cung cấp trên những các element của PCollection ấy và sinh ra không hoặc nhiều object PCollection khác.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Các bước biến đổi nhập xuất (I/O): Beam cung cấp khá nhiều kiểu nhập xuất khác nhau để đọc ghi dữ liệu từ liệu hệ thống lưu trữ bên ngoài.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Một chương trình Beam thông thường sẽ hoạt động như sau:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Tạo một object Pipeline và thiết lập các thông số thực thi cho pipeline, bao gồm cả Pipeline Runner.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tạo một PCollection khởi đầu cho dữ liệu pipeline hoặc sử dụng IOs để đọc dữ liệu từ các hệ thống lưu trữ dữ liệu bên ngoài hoặc sử dụng transform Create để tạo PCollection từ dữ liệu trong bộ nhớ.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chạy PTransforms cho các PCollection. Transform có thể thay đổi, lọc, nhóm, phân tích hay xử lý dữ liệu trong PCollection. Một transform tạo một PCollection mới mà không được chỉnh sửa collection input. Một pipeline thông thường chạy lần lượt các transform cho mỗi PCollection ouput mới được sinh ra cho tới khi hoàn thành quá trình xử lý. Tuy nhiên, lưu ý rằng một pipeline không chỉ là các transform chạy tối tiếp nhau theo một đường thẳng. Nếu xem các PCollection như các biến chạy và PTransform như các hàm chạy trên các biến, hình dạng của pipeline có thể là một đồ thị xử lý rất phức tạp&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sử dụng IO để ghi các PCollection đã được xử lý cuối cùng ra hệ thống lưu trữ bên ngoài.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chạy pipeline sử dụng Pipeline Runner được chỉ định trước&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Khi ta chạy một chương trình Beam, Pipeline Runner được chỉ được sẽ xây dựng một biểu đồ workflow của pipeline dựa trên các PCollection mà ta tạo ra và các transform mà ta sử dụng. Đồ thị đó được thực thi sử dụng một hệ thống back-end xử lý phân tán, trở thành một “job” bất đồng bộ trên hệ thống ấy.&lt;/p&gt;

&lt;h1 id=&quot;mô-hình-thực-thi-của-apache-beam&quot;&gt;Mô hình thực thi của Apache Beam&lt;/h1&gt;
&lt;p&gt;Tham khảo: https://beam.apache.org/documentation/execution-model/&lt;/p&gt;

&lt;h2 id=&quot;xử-lý-các-data-element&quot;&gt;Xử lý các data element&lt;/h2&gt;

&lt;p&gt;Quá trình giao tiếp và serialize (tuần tự hóa - tiến hình biến đổi một đối tượng thành một định dạng có thể lưu trữ và di chuyển) giữa các element (đơn vị dữ liệu - đơn vị nhỏ nhất để xử lý dữ liệu trong Beam) giữa các máy tính là một trong những tiến trình tốn kém nhất trong khi pipeline thực thi phân tán. Tránh quá trình serialize này sẽ yêu cầu phải tái xử lý các element sau khi gặp lỗi và có thể giới hạn việc phân tán ouput tới các máy tính khác.&lt;/p&gt;

&lt;h3 id=&quot;serialize-and-giao-tiếp-trong-hệ-thống&quot;&gt;Serialize and giao tiếp trong hệ thống&lt;/h3&gt;

&lt;p&gt;Runner có thể serialize các element giữa các máy để giao tiếp với nhau và cho các mục đích khác như giữ tính bền vững (persistent) của hệ thống.&lt;/p&gt;

&lt;p&gt;Một runner có thể quyết định cách truyền tải những các element giữa các transform theo nhiều cách khác nhau, như là:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Truyền các element tới một worker để xử lý nhóm dữ liệu. Thao tác này liên quan việc serialize, nhóm hay sắp xếp theo khóa các element.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tái phân phối các element giữa các worker để điều chỉnh tiến trình song song. Thao tác này liên quan quá trình serialize và giao tiếp bằng các element giữa các worker khác nhau&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sử dụng các element như một input cho ParDo. Việc này yêu cầu phải serialize các element và truyền tải chúng tới tất cả các worker thực thi ParDo.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Truyền dữ liệu giữa các transform đang chạy trên cùng một worker. Cho phép Runner tránh phải serialize dữ liệu; thay vào đó, runner chỉ cần truyền dữ liệu trong bộ nhớ.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Có vài tình huống khiến cho runner buộc phải serialize và bảo toàn dữ liệu là :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Khi đang là một phần của DoFn có trạng thái, runner phải lưu trữ giá trị dữ liệu với cơ chế quản lý trạng thái.&lt;/li&gt;
  &lt;li&gt;Khi cập nhật kết quả quá trình xử lý, runner phải lưu trữ lại các ouput như là checkpoint.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;đóng-gói-dữ-liệu-và-bảo-toàn-hệ-thống&quot;&gt;Đóng gói dữ liệu và bảo toàn hệ thống&lt;/h3&gt;

&lt;p&gt;Các pipeline của Beam thường tập trung vào xử lý vấn đề “embarassingly parallel” (Song song ngẫu nhiên - Những vấn đề có khả năng xử lý song song mà ít cần giao tiếp giữa các tác vụ song song). Bởi vậy, các API nhấn mạnh việc xử lý dữ liệu song song, khiến cho những thao tác chính xác như “gán một số thứ tự tăng dần cho từng các element trong một PCollection” trở nên khó khăn. Hệ thống được cố ý thiết kế như vậy vì những thuật toán như trên khó có thể giải quyết những vấn đề mở rộng hơn.&lt;/p&gt;

&lt;p&gt;Xử lý tất cả dữ liệu một cách song song cũng có vài nhược điểm. Cụ thể là nó khiến cho ta không thể xử lý dữ liệu theo khối (batch), ví dụ như không thể ghi dữ liệu xuống hay sao lưu tiến trình trong lúc đang xử lý.&lt;/p&gt;

&lt;p&gt;Thay vì xử lý tất cả dữ liệu tuần tự, các dữ liệu trong PCollection được xử lý theo những khối. Việc phân chia các tập dữ liệu thành các khối được các runner thực hiện một cách tùy ý. Việc này cho phép runner có thể chọn một cách lưu trữ kết quả trung gian hiệu quả giữa các đơn vị dữ liệu và có thể thực hiện lại công việc nếu có lỗi xảy ra. Ví dụ như một runner xử lý theo stream có thể chọn xử lý và commit từng khối nhỏ dữ liệu và một runner xử lý theo batch có thể xử lý những khối dữ liệu lớn hơn.&lt;/p&gt;

&lt;h2 id=&quot;xử-lý-song-song-trong-và-ngoài-các-bước-transform&quot;&gt;Xử lý song song trong và ngoài các bước transform&lt;/h2&gt;

&lt;h3 id=&quot;xử-lý-dữ-liệu-song-song-trong-một-bước-transform&quot;&gt;Xử lý dữ liệu song song trong một bước transform&lt;/h3&gt;

&lt;p&gt;Khi thực thi một ParDo, một runner có thể chưa một tập collection ví dụ gồm chín đơn vị dữ liệu vào hai khối dữ liệu dữ liệu để xử lý như hình.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_bundling.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Khi ParDo trên tiến hành thực thi, các worker có thể xử lý hai khối dữ liệu song song như hình.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_bundling_gantt.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bởi vì các đơn vị dữ liệu là thành phần nhỏ nhất không thể chia nhỏ hơn, số lượng tác vụ song song tối đa cho một transform chính là số lượng đơn vị dữ liệu trong tập dữ liệu. Tập dữ liệu đầu vào có chín các element, vì vậy số lượng tác vụ song song tối đa là chín.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_bundling_gantt_max.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;xử-lý-dữ-liệu-song-song-giữa-các-bước-transform&quot;&gt;Xử lý dữ liệu song song giữa các bước transform&lt;/h3&gt;

&lt;p&gt;Các transform ParDo được thực thi theo thứ tự có thể được xử lý song song tùy thuộc vào cách runner chọn thực thi transform sử dụng dữ liệu trên các đơn vị dữ liệu được tạo ra bởi transform sinh ra dữ liệu mà không cần đợi cả khối. Trong hình minh họa, ParDo1 và ParDo2 được thực thi song song nếu ouput của ParDo1 cần phải được xử lý ở chung worker với ParDo1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_bundling_multi.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hình dưới cho chúng ta thấy cách mà các transform có thể thực thi song song với nhau. Worker thứ nhất thực thi ParDo1 trên đơn vị dữ liệu của bundle A (khối dữ liệu A) tạo ra bundle C, và sau đó thực thi ParDo2 ngay trên đơn vị dữ liệu của bundle C.. Tương tự, worker thứ hai thực thi ParDo1 trên các đơn vị dữ liệu của bundle B tạo ra bundle D, và sau đó thực thi ParDo2 ngay trên đơn vị dữ liệu của bundle D.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_bundling_multi_gantt.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thực thi các transform theo cách này cho phép runner tránh phải tái phân phối các đơn vị dữ liệu giữa các worker, giúp tiết kiệm hao phí giao tiếp. Tuy nhiên, các tác vụ song song tối đa bây giờ phụ thuộc vào tác vụ song song tối đa của bước thực thi song song đầu tiên.&lt;/p&gt;

&lt;h2 id=&quot;xử-lý-lỗi-giữa-các-bước-transform&quot;&gt;Xử lý lỗi giữa các bước transform&lt;/h2&gt;

&lt;h3 id=&quot;lỗi-trong-một-bước-tranform&quot;&gt;Lỗi trong một bước tranform&lt;/h3&gt;

&lt;p&gt;Nếu quá trình xử lý của một đơn vị dữ liệu trong bundle thất bại, toàn bộ bundle sẽ thất bại. Toàn bộ quá trình xử lý elements trên bundle đó phải được thực hiện lại ngay để tránh toàn bộ pipeline thất bại, mặc dù chúng không cần thiết phải phải xử lý lại cùng với bundle cũ.&lt;/p&gt;

&lt;p&gt;Với ví dụ này, chúng ta sẽ sử dụng ParDo từ phía trên có một tập dữ liệu input gồm chín đơn vị dữ liệu và được chia thành hai bundle.&lt;/p&gt;

&lt;p&gt;Trong hình dưới, worker thứ nhất xử lý thành công cả năm element trong bundle A. Worker thứ hai xử lý bốn element trong bundle B: hai element đầu tiên được xử lý thành công và element thứ ba xử lý thất bại, element cuối cùng vẫn đang chờ xử lý.&lt;/p&gt;

&lt;p&gt;Chúng ta có thể thấy runner sẽ thực thi lại trên toàn bộ dữ liệu trong bundle B và quá trình xử lý hoàn toàn thành công vào lần 2. Lưu ý rằng quá trình thực thi lại không cần thiết phải chạy trên cùng worker với lần chạy ban đầu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_failure_retry.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bởi vì chúng ta gặp phải một lỗi trong quá trình xử lý một element trong bundle input, chúng ta phải xử lý lại tất cả element trong bundle input. Có nghĩa là runner phải bỏ tất cả bundle output bởi vì tất cả kết quả phải được tính toán lại.&lt;/p&gt;

&lt;h3 id=&quot;coupled-failure-lỗi-giữa-các-bước-tranform&quot;&gt;Coupled failure: Lỗi giữa các bước tranform&lt;/h3&gt;

&lt;p&gt;Nếu có một lỗi trong lúc xử lý một đơn vị dữ liệu trong ParDo2 khiến cho ParDo1 phải thực thi lại, hai bước trên gọi là co-failing.&lt;/p&gt;

&lt;p&gt;Trong ví dụ này chúng ta sẽ sử dụng lại hai ParDo được định nghĩa ở phần trên&lt;/p&gt;

&lt;p&gt;Worker thứ hai đã thành công thực thi ParDo1 trên tất cả dữ liệu ở bundle B. Tuy nhiên, worker thất bại trong việc xử lý dữ liệu ở bundle D, nên ParDo2 thất bại. Runner buộc phải từ bỏ và tính toán lại ouput của ParDo2. Bởi vì runner đang thực thi ParDo1 và ParDo2 cùng nhau, bundle output từ ParDo1 phải bị bỏ đi và tất cả element trong bundle input phải được xử lý lại. Hai ParDo đang co-failing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://beam.apache.org/images/execution_model_bundling_coupled_failure.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lưu ý rằng bước retry không cần thiết phải có cùng thời gian thực hiện với lần đầu.&lt;/p&gt;

&lt;p&gt;Tất cả DoFns gặp phải coupled failures sẽ bị ngắt và bị loại bỏ vì chúng không theo lifecycle của một DoFn bình thường.&lt;/p&gt;

&lt;p&gt;Thực thi transform theo hướng này cho phép runner tránh lưu trữ các đơn vị dữ liệu các bước transform, tiết kiệm hao phí lưu trữ.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Nov 2018 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2018/11/02/apache-beam/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2018/11/02/apache-beam/</guid>
        
        
        <category>paragraph</category>
        
        <category>feature photo</category>
        
      </item>
    
      <item>
        <title>Big Data Platform</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Những khái niệm cơ bản của Big Data. Những thông tin trong bài viết được tổng kết từ khóa học Big Data ở trường KHTN.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;những-công-nghệ-và-nền-tảng-big-data&quot;&gt;Những công nghệ và nền tảng Big Data&lt;/h1&gt;

&lt;p&gt;Những công việc chính của hệ thống Big Data&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tập hợp dữ liệu&lt;/li&gt;
  &lt;li&gt;Phân tích dữ liệu&lt;/li&gt;
  &lt;li&gt;Vận dụng dữ liệu&lt;/li&gt;
  &lt;li&gt;Thể hiện dữ liệu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Big Data là công nghệ đa ngành. Những công nghệ được áp dụng trong Big Data phải bao gồm:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cơ sở dữ liệu phân tán&lt;/li&gt;
  &lt;li&gt;Hệ thống lưu trữ dữ liệu có khả năng mở rộng cao&lt;/li&gt;
  &lt;li&gt;Cơ sở dữ liệu có khả năng xử lý song song số lượng lớn&lt;/li&gt;
  &lt;li&gt;Những mạng lưới khai thác dữ liệu&lt;/li&gt;
  &lt;li&gt;Mạng Internet mạnh&lt;/li&gt;
  &lt;li&gt;Hệ thống tập tin phân tán&lt;/li&gt;
  &lt;li&gt;Các nền tảng điện toán đám mây&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Những kiến thức cần sử dụng từ nhiều lĩnh vực như: Thống kê, Khoa học máy tính, Toán ứng dụng, Kinh tế, …&lt;/p&gt;

&lt;p&gt;Một nền tảng Big Data cần cung cấp&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sự toàn diện: Mọi thách thức của Big Data đều phải được giải quyết&lt;/li&gt;
  &lt;li&gt;Sẵn sàng cho doanh nghiệp: Phải đầy đủ hiệu năng, bảo mật, có giá trị sử dụng và đáng tin cậy.&lt;/li&gt;
  &lt;li&gt;Khả năng tích hợp: Các bước đưa công nghệ Big Data đến với doanh nghiệp phải được đơn giản hóa và nhanh chóng. Có khả năng tích hợp với chuỗi cung cấp dữ liệu, bao gồm cơ sở dữ liệu, kho dữ liệu và các ứng dụng business intelligence.
Hơn thế nữa, nền tảng Big Data cũng nên cung cấp:&lt;/li&gt;
  &lt;li&gt;Một nền tảng mã nguồn mở, đọc/ghi dữ liệu với độ trễ thấp, những câu truy vấn ad-hoc, khả năng scale, khả năng chịu đựng lỗi mạnh mẽ và ít tốn công bảo trì.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;đào-sâu-vào-những-công-nghệ-big-data&quot;&gt;Đào sâu vào những công nghệ Big Data&lt;/h1&gt;

&lt;p&gt;Các tầng công nghệ Big Data&lt;/p&gt;

&lt;p&gt;Layer 0: Cơ sở hạ tầng vật lý dư thừa&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cơ sở hạ tầng vật lý ở cấp thấp nhất như phần cứng, mạng, ….&lt;/li&gt;
  &lt;li&gt;Đa số những cài đặt Big Data phải high available, tức là mạng, server và kho lưu trữ vật lý phải rất dư thừa và dội lên - Một hệ thống phải có khả năng co dãn để đối phó với lỗi hay thay đổi và những tài nguyên dư thừa luôn trong vị trí sẵn sàng được sử dụng.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;big-data-và-data-science&quot;&gt;Big Data và Data Science&lt;/h1&gt;
</description>
        <pubDate>Thu, 01 Nov 2018 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2018/11/01/big-data-platform/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2018/11/01/big-data-platform/</guid>
        
        
        <category>paragraph</category>
        
        <category>feature photo</category>
        
      </item>
    
      <item>
        <title>Big Data Concept</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Những khái niệm cơ bản của Big Data. Những thông tin trong bài viết được tổng kết từ khóa học Big Data ở trường KHTN.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;big-data-là-gì&quot;&gt;Big Data là gì?&lt;/h1&gt;

&lt;p&gt;Có rất nhiều định nghĩa trên khắp thế giới được đưa ra để định nghĩa cho khái niệm này. Chúng ta sẽ theo dõi vài định nghĩa nổi tiếng sau:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Big data is a term used to refer to data sets that are too large or complex for traditional data-processing application software to adequately deal with. Data with many cases (rows) offer greater statistical power, while data with higher complexity (more attributes or columns) may lead to a higher false discovery rate. - &lt;a href=&quot;https://en.wikipedia.org/wiki/Big_data&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Big Data là một thuật ngữ để chỉ việc một tập dữ liệu quá lớn hay quá phức tạp để xử lý đối với các phần mềm xử lý dữ liệu truyền thống. Càng nhiều dữ liệu cung cấp một nguồn sức mạnh thống kê to lớn, trong khi đó dữ liệu với độ phức tạp càng cao sẽ dẫn đến tỉ lệ khai thác thất bại cao hơn.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Big data is high-volume, high-velocity and/or high-variety information assets that demand cost-effective, innovative forms of information processing that enable enhanced insight, decision making, and process automation. - &lt;a href=&quot;https://www.gartner.com/it-glossary/big-data/&quot;&gt;Gartner IT Glossary&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Big Data là những tập thông tin với “dung lượng” lớn, “vận tốc” (thay đổi) lớn và “độ đa dạng” cao, yêu cầu những hình thức xử lý thông tin cải tiến và hiệu quả cho phép ta khai thác thông tin, ra quyết định và xử lý tự động.&lt;/p&gt;

&lt;p&gt;Big Data is a term that describes at least three separate, but irrelated, trends&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Capturing and managing lots of information&lt;/li&gt;
  &lt;li&gt;Working with many new types of data&lt;/li&gt;
  &lt;li&gt;Exploiting these masses of information and new data types with new styles of applications&lt;/li&gt;
  &lt;li&gt;Hadoop for Dummies, Special Ed. 2012&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Big Data là một thuật ngữ miêu tả ít nhất ba xu hướng tách biệt và không liên quan:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Thu thập và quản lý rất nhiều dữ liệu&lt;/li&gt;
  &lt;li&gt;Làm việc với nhiều kiểu dữ liệu mới&lt;/li&gt;
  &lt;li&gt;Khai thác khối lượng dữ liệu và những kiểu dữ liệu trên với nhiều kiểu ứng dụng.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nói tóm lại&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“Big Data” tương tự với “small data” nhưng có kích thước lớn hơn.&lt;/li&gt;
  &lt;li&gt;Xử lý khối lượng dữ liệu lớn yêu cầu nhiều cách tiếp cận khác với truyền thống.&lt;/li&gt;
  &lt;li&gt;Khai thác dữ liệu từ Big Data giúp ta giải quyết nhiều vấn đề cũ và mới một cách tốt hơn.&lt;/li&gt;
  &lt;li&gt;Big Data không phải là một công nghệ đơn lẻ mà là sự kết hợp của các công nghệ cũ và mới giúp công ty có những thông tind được khai thác mang tính thực tiễn.&lt;/li&gt;
  &lt;li&gt;Công nghệ Big Data phải có khả năng xử lý khối lượng lớn các dữ liệu khác nhau với tốc độ ổn định, trong thời gian cho phép để cho phép phân tích và phản ứng lại trong thời gian thực.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;những-đặc-tính-v-của-big-data&quot;&gt;Những đặc tính V của Big Data&lt;/h1&gt;

&lt;p&gt;Các đặc tính của Big Data được biểu thị qua 4 chữ V:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Volume (Dung lượng dữ liệu)
Khối lượng dữ liệu sinh ra ngày nay là khổng lồ so với các nguồn dữ liệu truyền thống do sự gia tăng của các nguồn tạo dữ liệu, các cảm biến có độ nhạy bén cao hơn và những cơ sở hạ tầng có khả năng scale lớn. Đơn vị đo dữ liệu nay đã lên đến Exabyte, zettabyte, yottabyte,….&lt;/li&gt;
  &lt;li&gt;Velocity (Tốc độ thay đổi dữ liệu)
Dữ liệu được sinh ra ngày càng nhanh và không bao giờ dừng lại. Và yêu cầu về tốc độ mà chúng ta biến dữ liệu thành những thông tin hữu ích ngày càng cao. Từ các phương pháp xử lý dữ liệu theo khối (batch), nay ta phải xử lý dữ liệu theo dòng (stream) do các phương tiện kết nối ngày càng nhiều. Đó là cuộc chạy đua lợi thế cạnh tranh và các thông tin để tiền xử lý dữ liệu&lt;/li&gt;
  &lt;li&gt;Variety (Độ đa dạng của dữ liệu)
Dữ liệu ngày nay được sinh ra từ rất nhiều nguồn, máy móc và cả con người, được xử lý từ trong và ngoài các tổ chức do sự bành trướng của công nghệ di động, đa phương tiện truyền thông xã hội, các thiết bị IoT. Cấp độ cấu trúc dữ liệu và độ phức tạp ngày càng cao, dữ liệu ngày nay có thể chia làm ba loại: có cấu trúc, phi cấu trúc và bán cấu trúc&lt;/li&gt;
  &lt;li&gt;Veracity (Tính không chắc chắn của dữ liệu)
Tính chất này do chất lượng của các nguồn dữ liệu khác nhau gây ảnh hưởng đến tính toàn vẹn và rõ ràng của dữ liệu. Nhiều thông tin được sinh ra cần phải được truy xuất nguồn gốc và tính tin cậy để không khai thác ra những thông tin sai lệch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Và tất cả những đặc tính trên nhằm mang lại chữ V mà ta cần quan tâm nhất - Value, giá trị thông tin ta nhận được từ việc khai thác dữ liệu. Thông tin này giúp chúng ta xử lý vấn đề và ra quyết định chính xác mang lại lợi ích rất lớn.&lt;/p&gt;

&lt;h1 id=&quot;những-vấn-đề-cơ-bản-của-big-data&quot;&gt;Những vấn đề cơ bản của Big Data&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Khi khối lượng dữ liệu ngày càng lớn, giá trị của những record dữ liệu khác nhau sẽ giảm tỉ lệ với độ tuổi, loại, độ màu mỡ, số lượng và các tác nhân khác.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rất khó để xử lý những dữ liệu phức tạp bằng các hệ thống phân tích truyền thống hiện tại. Cơ sở hạ tầng không cho phép lưu trữ tập trung khối lượng dữ liệu quá lớn, và việc vận chuyển dữ liệu giữa các hệ thống cũng gặp nhiều trở ngại về băng thông, tốc độ truyền tải.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Có một sự khoảng cách đáng kể giữa những nhà lãnh đạo kinh doanh và những chuyển gia IT. Trong khi những nhà lãnh đạo quan tâm đến việc tăng lợi nhuận cho việc kinh doanh, những chuyên gia IT chỉ quan tâm về kỹ thuật lưu trữ và xử lý.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Vấn đề quản lý dữ liệu có lẽ là vấn đề khó nhất. Vấn đề truy xuất, sử dụng, cập nhật, quản trị và trích dẫn là những vấn đề lớn chắn đường.
    &lt;ul&gt;
      &lt;li&gt;Các nguồn dữ liệu đa dạng về kích thước, định dạng và các thu thập dữ liệu&lt;/li&gt;
      &lt;li&gt;Trả lời những câu hỏi về xuất xứ, ý nghĩa của dữ liệu được thu thập&lt;/li&gt;
      &lt;li&gt;Xác thực từng mẩu dữ liệu là chuyện phi thực tế&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sức mạnh của những bộ xử lý là có giới hạn. Những thuật toán xử lý và phân tích dữ liệu song song để có thể mở rộng đang rất cần thiết.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 28 Oct 2018 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2018/10/28/big-data-concept/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2018/10/28/big-data-concept/</guid>
        
        
        <category>paragraph</category>
        
        <category>feature photo</category>
        
      </item>
    
      <item>
        <title>Polaroid Williamsburg</title>
        <description>&lt;p&gt;Etsy squid occupy pop-up. Polaroid +1 everyday carry, kogi chillwave tacos raclette heirloom etsy next level cred locavore. Blog street art DIY, pug crucifix asymmetrical chicharrones. Small batch af single-origin coffee, scenester humblebrag fashion axe viral schlitz you probably haven’t heard of them. Kickstarter synth poutine brunch hoodie. Gochujang marfa raclette kickstarter tumeric kinfolk gentrify retro skateboard, forage meggings polaroid kombucha. Tilde mlkshk fam meggings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Actually YOLO marfa tofu shabby chic snackwave. Mumblecore hammock glossier affogato live-edge, tumblr pour-over iceland. Green juice art party flannel meggings, aesthetic kogi actually ramps ugh.&lt;/li&gt;
  &lt;li&gt;Church-key crucifix messenger bag health goth&lt;/li&gt;
  &lt;li&gt;Try-hard artisan direct trade&lt;/li&gt;
  &lt;li&gt;Cold-pressed selfies&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Actually YOLO marfa tofu shabby chic snackwave. Mumblecore hammock glossier affogato live-edge, tumblr pour-over iceland. Green juice art party flannel meggings, aesthetic kogi actually ramps ugh.&lt;/li&gt;
  &lt;li&gt;Church-key crucifix messenger bag health goth&lt;/li&gt;
  &lt;li&gt;Try-hard artisan direct trade&lt;/li&gt;
  &lt;li&gt;Cold-pressed selfies&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;subway-tile&quot;&gt;Subway tile&lt;/h3&gt;
&lt;p&gt;Knausgaard readymade williamsburg tote bag taxidermy, DIY meditation copper mug. Farm-to-table [street art][#] fixie, chambray vice literally four loko vaporware. Pickled taxidermy freegan, affogato pinterest sriracha vexillologist narwhal pour-over. Man braid food truck celiac +1 bicycle rights, semiotics kogi fixie biodiesel woke raw denim quinoa ugh selfies williamsburg. Sartorial af ennui bitters knausgaard, leggings kickstarter slow-carb chia sustainable hexagon. Prism 3 wolf moon occupy ramps wayfarers tumblr narwhal 90’s. Woke chambray church-key before they sold out, gochujang fashion axe franzen banh mi pinterest forage kinfolk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-2.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Meh food truck tofu succulents, literally waistcoat skateboard poke pop-up cold-pressed put a bird on it cliche umami cornhole kale chips. Man braid 8-bit irony selvage, butcher blog everyday carry. Af meggings tacos ugh la croix skateboard. Biodiesel paleo prism kombucha seitan drinking vinegar. Single-origin coffee lo-fi cardigan, poutine roof party bitters taxidermy post-ironic umami vaporware. Austin edison bulb leggings cliche. Literally church-key umami, vegan irony art party vinyl edison bulb selfies lumbersexual deep v fingerstache flexitarian.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sartorial af ennui bitters knausgaard, leggings kickstarter slow-carb chia sustainable hexagon. Prism 3 wolf moon occupy ramps wayfarers tumblr narwhal 90’s.
&lt;cite&gt;Man braid&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;subway-tile-1&quot;&gt;Subway tile&lt;/h4&gt;
&lt;p&gt;Slow-carb cornhole crucifix thundercats intelligentsia. Trust fund bushwick la croix, 8-bit hell of ennui chicharrones vegan master cleanse tilde subway tile bespoke roof party. Next level celiac bushwick coloring book subway tile. Lyft knausgaard four loko, twee sustainable narwhal letterpress PBR&amp;amp;B kombucha paleo mixtape helvetica. Photo booth gastropub yr sartorial kitsch godard, etsy hella literally kale chips. Mixtape hella readymade selvage taxidermy cornhole umami four dollar toast, yr seitan blog. Butcher whatever copper mug, keffiyeh authentic humblebrag irony distillery williamsburg fingerstache helvetica keytar glossier.&lt;/p&gt;

&lt;p&gt;Gluten-free la croix activated charcoal tousled, brunch semiotics sartorial mustache hashtag. Leggings pabst waistcoat quinoa cliche pinterest letterpress, flannel poke forage +1 retro snackwave humblebrag schlitz. Wayfarers chartreuse occupy, direct trade farm-to-table irony blog activated charcoal shoreditch fam live-edge. Intelligentsia scenester gochujang gentrify portland offal. Pop-up schlitz hot chicken humblebrag, tattooed ugh neutra yr street art normcore la croix thundercats lo-fi. Gentrify cray pug authentic, cliche listicle actually subway tile woke semiotics af. Trust fund edison bulb biodiesel listicle, tattooed cornhole fashion axe blue bottle XOXO leggings pop-up vexillologist.&lt;/p&gt;

&lt;p&gt;Pinterest cold-pressed selfies man bun twee williamsburg irony, art party snackwave tumeric knausgaard marfa polaroid chambray. PBR&amp;amp;B semiotics selvage brooklyn hexagon cray. Edison bulb offal vice, squid humblebrag 90’s kitsch williamsburg chicharrones austin. Poke 3 wolf moon selfies banh mi farm-to-table raclette. +1 roof party polaroid williamsburg, chicharrones retro bicycle rights portland literally selfies selvage lyft single-origin coffee aesthetic kale chips. Blog yr la croix four loko beard. Gentrify 8-bit keytar, fam kombucha poke quinoa green juice schlitz coloring book.&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/23/polaroid-williamsburg/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/23/polaroid-williamsburg/</guid>
        
        <category>Dummy Text</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Coloring Book</title>
        <description>&lt;p&gt;Cred artisan post-ironic ramps chillwave. Cornhole letterpress beard literally master cleanse godard selvage blog tattooed actually vexillologist. Fingerstache tousled DIY +1.&lt;/p&gt;

&lt;p&gt;YOLO cold-pressed cred activated charcoal pabst hexagon VHS cornhole brunch, tbh salvia butcher coloring book. Mlkshk sartorial prism master cleanse brooklyn vegan knausgaard PBR&amp;amp;B subway tile swag umami synth distillery. Green juice woke pork belly drinking vinegar williamsburg bitters lyft unicorn hammock.&lt;/p&gt;

&lt;p&gt;Hammock whatever paleo, crucifix affogato vice actually vape dreamcatcher franzen fixie hella tofu everyday carry. Keytar gluten-free VHS, wolf scenester swag roof party listicle. Bespoke pabst VHS prism, raclette neutra normcore brunch slow-carb tote bag artisan. Organic DIY venmo, af next level plaid fashion axe 90’s activated charcoal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-30.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ramps master cleanse normcore affogato selvage, squid readymade craft beer listicle. Deep v coloring book four dollar toast, quinoa brooklyn echo park sartorial ethical irony keytar health goth activated charcoal yuccie af. Before they sold out pug humblebrag lomo, banjo food truck cray.&lt;/p&gt;

&lt;p&gt;Helvetica wolf skateboard chambray direct trade bicycle rights. Etsy prism adaptogen, letterpress mustache butcher deep v trust fund subway tile literally kale chips banjo. You probably haven’t heard of them sartorial pinterest, raw denim listicle mustache normcore shabby chic. Seitan freegan small batch kitsch narwhal forage. Vice knausgaard venmo whatever, shaman narwhal selvage chia. Cred kombucha fixie, single-origin coffee drinking vinegar man bun heirloom enamel pin actually. Echo park chia whatever yuccie pabst copper mug chartreuse. Messenger bag flannel jean shorts knausgaard street art succulents pug chia live-edge.&lt;/p&gt;

&lt;p&gt;Crucifix bushwick yr, messenger bag plaid microdosing vice fanny pack lomo taxidermy raclette. Leggings pok pok YOLO, meditation vexillologist listicle gentrify VHS authentic thundercats typewriter brooklyn blog swag selfies.&lt;/p&gt;

&lt;p&gt;Try-hard knausgaard 8-bit synth, fingerstache banh mi cliche chillwave taiyaki brooklyn vaporware. Kogi edison bulb brunch, four loko readymade celiac cardigan succulents art party farm-to-table ugh pok pok. Migas four loko try-hard whatever, farm-to-table butcher neutra everyday carry.&lt;/p&gt;

&lt;p&gt;Artisan kogi poke woke chambray fanny pack. Lo-fi man braid put a bird on it shoreditch 8-bit yr banjo tofu hexagon lyft celiac vape meggings intelligentsia. Tote bag literally VHS skateboard meh air plant cardigan. Selvage deep v food truck lyft four loko. Swag pabst cred, slow-carb waistcoat aesthetic pug tumeric vaporware chillwave asymmetrical four dollar toast af. Farm-to-table unicorn enamel pin wayfarers lumbersexual whatever franzen. Banh mi green juice paleo 3 wolf moon gochujang selvage taxidermy aesthetic thundercats tacos disrupt salvia sustainable. Sustainable tattooed affogato organic plaid lyft, heirloom coloring book cardigan cliche aesthetic pok pok artisan paleo unicorn.&lt;/p&gt;

&lt;p&gt;Cloud bread trust fund intelligentsia VHS actually, glossier health goth mustache kombucha adaptogen salvia slow-carb activated charcoal man braid. Listicle enamel pin wolf neutra.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-19.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Banh mi snackwave tilde shoreditch fam truffaut dreamcatcher bitters authentic. Dreamcatcher hella +1 schlitz, fixie hexagon selvage. Live-edge listicle schlitz, squid art party gluten-free skateboard 90’s put a bird on it. Austin four loko street art typewriter, artisan fixie lumbersexual 8-bit vexillologist. Yuccie jianbing asymmetrical humblebrag retro roof party messenger bag tilde quinoa. Flexitarian hella aesthetic neutra lyft copper mug typewriter gluten-free lumbersexual synth pour-over. Cold-pressed butcher portland banjo tote bag raw denim. Occupy butcher cardigan, +1 before they sold out next level tumblr VHS. Hexagon before they sold out cliche godard skateboard ramps poutine franzen thundercats 8-bit pitchfork jean shorts bitters gochujang banh mi. Man braid iPhone humblebrag YOLO. Vinyl man bun cronut tumblr migas quinoa plaid ugh selfies. Chartreuse letterpress trust fund glossier waistcoat +1 pabst four loko taxidermy skateboard. Ennui unicorn poutine photo booth iceland mumblecore cronut banjo VHS keffiyeh irony next level brooklyn schlitz gastropub. Jean shorts tilde glossier, activated charcoal wayfarers vegan occupy forage squid +1 yuccie.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/22/coloring-book/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/22/coloring-book/</guid>
        
        <category>Squid</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Flannel Distillery Asymmetrical</title>
        <description>&lt;p&gt;Church-key XOXO try-hard, schlitz kickstarter meh marfa sustainable yuccie you probably haven’t heard of them. Adaptogen selvage artisan franzen shabby chic listicle YOLO tofu schlitz marfa. Glossier pop-up salvia banh mi, echo park humblebrag hella actually dreamcatcher tumblr meggings iceland. Fanny pack chambray pinterest adaptogen salvia.&lt;/p&gt;

&lt;p&gt;Whatever cornhole single-origin coffee succulents selvage 3 wolf moon prism swag marfa flexitarian. Butcher semiotics gentrify fam. Normcore next level heirloom copper mug sriracha. Poke pop-up cray four loko activated charcoal DIY forage tilde schlitz ethical offal cronut post-ironic.&lt;/p&gt;

&lt;p&gt;Hell of bicycle rights wolf intelligentsia sriracha 90’s skateboard fashion axe 3 wolf moon meditation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-20.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jean shorts pour-over chicharrones woke. Kinfolk next level chia master cleanse. Messenger bag green juice tumeric trust fund pour-over vegan. Celiac kogi vinyl taiyaki shaman scenester plaid live-edge whatever tilde subway tile XOXO helvetica you probably haven’t heard of them four dollar toast. Knausgaard franzen mumblecore normcore microdosing. Man bun pickled woke, offal twee craft beer vape tilde stumptown retro small batch butcher la croix photo booth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-22.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Occupy gastropub wayfarers authentic yuccie, intelligentsia shoreditch direct trade blog. Hell of neutra gochujang knausgaard irony normcore enamel pin. Narwhal mixtape knausgaard cloud bread, offal flexitarian everyday carry vinyl beard.&lt;/p&gt;

&lt;p&gt;Chicharrones locavore fashion axe activated charcoal, salvia heirloom jianbing pug farm-to-table tattooed ennui. Wayfarers poke edison bulb banjo street art normcore. Gentrify hashtag health goth listicle biodiesel chambray wolf vape. Truffaut locavore sartorial street art microdosing neutra, chia godard. Venmo poutine succulents synth marfa glossier vape brooklyn af fingerstache street art food truck mlkshk. Twee trust fund etsy bicycle rights umami, brunch ennui mlkshk poutine. Ennui ugh cred distillery. Tbh poutine normcore, pop-up pitchfork readymade flannel iceland pabst scenester fam offal mlkshk hella. Hella gastropub dreamcatcher tumblr lumbersexual kinfolk. Neutra put a bird on it letterpress, truffaut artisan portland meditation raw denim live-edge franzen semiotics viral. Neutra selfies knausgaard green juice raclette. Blue bottle disrupt 8-bit coloring book farm-to-table seitan. Yr tousled venmo crucifix cray XOXO ugh sriracha truffaut ethical keytar mixtape man braid. Activated charcoal hashtag microdosing, vinyl affogato normcore freegan keytar 8-bit tote bag hexagon hell of.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-23.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Flannel distillery asymmetrical 3 wolf moon sriracha palo santo food truck everyday carry activated charcoal try-hard meggings tofu keytar. Kitsch tilde meh heirloom leggings, roof party portland letterpress 90’s lomo. Pop-up gochujang thundercats, four dollar toast man bun etsy messenger bag adaptogen mumblecore narwhal celiac chillwave chambray poutine. Vaporware craft beer occupy tattooed authentic cray. Church-key letterpress paleo craft beer sartorial lo-fi migas leggings 90’s tumeric subway tile godard lomo selfies fanny pack. Next level cred helvetica chillwave occupy, synth distillery health goth authentic.&lt;/p&gt;

&lt;p&gt;Dreamcatcher tbh paleo kombucha schlitz lomo literally bicycle rights salvia fashion axe. Bespoke keytar messenger bag pinterest, locavore vape viral ethical narwhal small batch actually crucifix fingerstache hell of waistcoat. Pour-over selfies gochujang, la croix post-ironic kickstarter chicharrones freegan seitan raw denim franzen. Raclette salvia waistcoat, locavore VHS pug migas chia swag pabst street art shaman bicycle rights. Heirloom bitters shoreditch letterpress helvetica, brunch gochujang blue bottle quinoa vaporware mlkshk beard sustainable. Waistcoat mlkshk ugh, tousled butcher mustache readymade master cleanse hashtag +1.&lt;/p&gt;

&lt;p&gt;Narwhal kombucha before they sold out tacos affogato, tousled pok pok woke literally occupy. Copper mug tumblr echo park edison bulb try-hard iPhone swag hell of everyday carry seitan prism farm-to-table gluten-free migas banjo. Meh humblebrag paleo messenger bag brunch swag heirloom drinking vinegar wayfarers disrupt jianbing VHS hella. Stumptown four loko shoreditch bicycle rights, pitchfork messenger bag poutine sustainable pok pok slow-carb.&lt;/p&gt;

&lt;p&gt;Lo-fi wayfarers cold-pressed, drinking vinegar quinoa succulents hashtag tote bag kitsch coloring book tacos sustainable. Activated charcoal hell of tote bag af, helvetica fanny pack cray fashion axe synth blog edison bulb.&lt;/p&gt;

&lt;p&gt;Subway tile iceland banh mi pickled air plant. Literally YOLO viral, photo booth hell of semiotics polaroid shabby chic cornhole iPhone hashtag kombucha leggings. Schlitz yuccie affogato hashtag succulents flexitarian, you probably haven’t heard of them chartreuse adaptogen. Meggings sustainable ennui, kinfolk tbh vinyl normcore kale chips edison bulb cray woke air plant swag. Neutra cardigan palo santo whatever.&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/21/flannel-distillery-asymmetrical/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/21/flannel-distillery-asymmetrical/</guid>
        
        <category>Dummy Text</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Roof Party</title>
        <description>&lt;p&gt;Etsy squid occupy pop-up. Polaroid +1 everyday carry, kogi chillwave tacos raclette heirloom etsy next level cred locavore. Blog street art DIY, pug crucifix asymmetrical chicharrones. Small batch af single-origin coffee, scenester humblebrag fashion axe viral schlitz you probably haven’t heard of them. Kickstarter synth poutine brunch hoodie. Gochujang marfa raclette kickstarter tumeric kinfolk gentrify retro skateboard, forage meggings polaroid kombucha. Tilde mlkshk fam meggings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Actually YOLO marfa tofu shabby chic snackwave. Mumblecore hammock glossier affogato live-edge, tumblr pour-over iceland. Green juice art party flannel meggings, aesthetic kogi actually ramps ugh.&lt;/li&gt;
  &lt;li&gt;Church-key crucifix messenger bag health goth&lt;/li&gt;
  &lt;li&gt;Try-hard artisan direct trade&lt;/li&gt;
  &lt;li&gt;Cold-pressed selfies&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Actually YOLO marfa tofu shabby chic snackwave. Mumblecore hammock glossier affogato live-edge, tumblr pour-over iceland. Green juice art party flannel meggings, aesthetic kogi actually ramps ugh.&lt;/li&gt;
  &lt;li&gt;Church-key crucifix messenger bag health goth&lt;/li&gt;
  &lt;li&gt;Try-hard artisan direct trade&lt;/li&gt;
  &lt;li&gt;Cold-pressed selfies&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;subway-tile&quot;&gt;Subway tile&lt;/h3&gt;
&lt;p&gt;Knausgaard readymade williamsburg tote bag taxidermy, DIY meditation copper mug. Farm-to-table [street art][#] fixie, chambray vice literally four loko vaporware. Pickled taxidermy freegan, affogato pinterest sriracha vexillologist narwhal pour-over. Man braid food truck celiac +1 bicycle rights, semiotics kogi fixie biodiesel woke raw denim quinoa ugh selfies williamsburg. Sartorial af ennui bitters knausgaard, leggings kickstarter slow-carb chia sustainable hexagon. Prism 3 wolf moon occupy ramps wayfarers tumblr narwhal 90’s. Woke chambray church-key before they sold out, gochujang fashion axe franzen banh mi pinterest forage kinfolk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-2.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Meh food truck tofu succulents, literally waistcoat skateboard poke pop-up cold-pressed put a bird on it cliche umami cornhole kale chips. Man braid 8-bit irony selvage, butcher blog everyday carry. Af meggings tacos ugh la croix skateboard. Biodiesel paleo prism kombucha seitan drinking vinegar. Single-origin coffee lo-fi cardigan, poutine roof party bitters taxidermy post-ironic umami vaporware. Austin edison bulb leggings cliche. Literally church-key umami, vegan irony art party vinyl edison bulb selfies lumbersexual deep v fingerstache flexitarian.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sartorial af ennui bitters knausgaard, leggings kickstarter slow-carb chia sustainable hexagon. Prism 3 wolf moon occupy ramps wayfarers tumblr narwhal 90’s.
&lt;cite&gt;Man braid&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;subway-tile-1&quot;&gt;Subway tile&lt;/h4&gt;
&lt;p&gt;Slow-carb cornhole crucifix thundercats intelligentsia. Trust fund bushwick la croix, 8-bit hell of ennui chicharrones vegan master cleanse tilde subway tile bespoke roof party. Next level celiac bushwick coloring book subway tile. Lyft knausgaard four loko, twee sustainable narwhal letterpress PBR&amp;amp;B kombucha paleo mixtape helvetica. Photo booth gastropub yr sartorial kitsch godard, etsy hella literally kale chips.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-25.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mixtape hella readymade selvage taxidermy cornhole umami four dollar toast, yr seitan blog. Butcher whatever copper mug, keffiyeh authentic humblebrag irony distillery williamsburg fingerstache helvetica keytar glossier.&lt;/p&gt;

&lt;p&gt;Gluten-free la croix activated charcoal tousled, brunch semiotics sartorial mustache hashtag.&lt;/p&gt;

&lt;p&gt;Leggings pabst waistcoat quinoa cliche pinterest letterpress, flannel poke forage +1 retro snackwave humblebrag schlitz. Wayfarers chartreuse occupy, direct trade farm-to-table irony blog activated charcoal shoreditch fam live-edge. Intelligentsia scenester gochujang gentrify portland offal.&lt;/p&gt;

&lt;p&gt;Pop-up schlitz hot chicken humblebrag, tattooed ugh neutra yr street art normcore la croix thundercats lo-fi. Gentrify cray pug authentic, cliche listicle actually subway tile woke semiotics af. Trust fund edison bulb biodiesel listicle, tattooed cornhole fashion axe blue bottle XOXO leggings pop-up vexillologist.&lt;/p&gt;

&lt;p&gt;Pinterest cold-pressed selfies man bun twee williamsburg irony, art party snackwave tumeric knausgaard marfa polaroid chambray.&lt;/p&gt;

&lt;p&gt;PBR&amp;amp;B semiotics selvage brooklyn hexagon cray. Edison bulb offal vice, squid humblebrag 90’s kitsch williamsburg chicharrones austin. Poke 3 wolf moon selfies banh mi farm-to-table raclette. +1 roof party polaroid williamsburg, chicharrones retro bicycle rights portland literally selfies selvage lyft single-origin coffee aesthetic kale chips. Blog yr la croix four loko beard. Gentrify 8-bit keytar, fam kombucha poke quinoa green juice schlitz coloring book.&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/20/roof-party/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/20/roof-party/</guid>
        
        <category>Squid</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Waistcoat Tote Bag Pickled</title>
        <description>&lt;p&gt;You probably haven’t heard of them pug wayfarers pork belly ennui ramps yuccie seitan hexagon mumblecore PBR&amp;amp;B banjo readymade. Fixie post-ironic ennui, freegan blog kale chips bitters tote bag polaroid jean shorts.&lt;/p&gt;

&lt;p&gt;Bespoke fingerstache keffiyeh, scenester godard tacos flexitarian mixtape PBR&amp;amp;B knausgaard. Kale chips intelligentsia glossier mixtape sustainable 8-bit iPhone. Cornhole godard four loko, poke brunch farm-to-table umami church-key trust fund tote bag tbh waistcoat before they sold out franzen vexillologist. Helvetica green juice sustainable pinterest 8-bit VHS.&lt;/p&gt;

&lt;p&gt;Crucifix fixie pinterest hella fingerstache four dollar toast. Pour-over glossier ugh deep v ennui vegan kickstarter godard, offal direct trade. Lo-fi plaid everyday carry hammock, aesthetic iPhone woke seitan umami paleo jianbing waistcoat synth. Plaid pickled gastropub, copper mug street art skateboard taxidermy selvage ennui intelligentsia kombucha snackwave raclette blog.&lt;/p&gt;

&lt;p&gt;Intelligentsia farm-to-table shabby chic XOXO normcore. Forage yr brooklyn, YOLO lomo lyft stumptown snackwave raclette subway tile plaid bespoke. Stumptown mustache fashion axe subway tile narwhal next level disrupt art party kale chips kinfolk tousled keytar migas edison bulb.&lt;/p&gt;

&lt;p&gt;Cronut waistcoat tote bag pickled, narwhal yr tofu health goth neutra poke. Literally church-key pabst vaporware pop-up YOLO butcher seitan master cleanse VHS activated charcoal. Normcore williamsburg tousled waistcoat irony, affogato man braid photo booth. Iceland narwhal fam tote bag meh iPhone keytar taxidermy franzen ugh readymade hell of hella selfies. Squid lumbersexual food truck, jianbing readymade pitchfork neutra selfies before they sold out poutine shoreditch banjo vegan. Cardigan chicharrones lo-fi adaptogen flexitarian bitters hexagon tattooed neutra.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-28.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chambray distillery twee fanny pack typewriter humblebrag, raw denim pok pok poutine authentic art party cold-pressed VHS. Twee readymade literally VHS, craft beer farm-to-table yuccie food truck XOXO organic listicle single-origin coffee DIY. Umami palo santo godard kombucha.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/19/waistcoat-tote-bag-pickled/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/19/waistcoat-tote-bag-pickled/</guid>
        
        <category>Dummy Text</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Blue Bottle</title>
        <description>&lt;h1 id=&quot;bicycle-rights&quot;&gt;Bicycle Rights&lt;/h1&gt;
&lt;p&gt;Subway tile iPhone hot chicken, pour-over kale chips synth godard distillery man braid forage raclette blue bottle. Ugh hashtag hammock gastropub meggings la croix four dollar toast VHS disrupt PBR&amp;amp;B narwhal farm-to-table pabst. Kinfolk brooklyn viral tilde humblebrag bicycle rights.&lt;/p&gt;

&lt;p&gt;Slow-carb 90’s blue bottle godard meggings +1 helvetica. Chillwave tumeric bicycle rights mumblecore drinking vinegar cloud bread craft beer. Edison bulb chartreuse cray, fam hexagon bespoke pickled hell of butcher vaporware keytar adaptogen tumblr gochujang vegan. Glossier ramps chicharrones kickstarter. Typewriter cloud bread thundercats letterpress.&lt;/p&gt;

&lt;p&gt;Swag normcore plaid gochujang irony. Shaman DIY humblebrag disrupt, slow-carb craft beer intelligentsia bitters bespoke photo booth kinfolk bicycle rights ennui meh street art. Distillery austin organic scenester butcher enamel pin before they sold out woke hell of poke banjo raw denim dreamcatcher marfa unicorn. Cloud bread air plant woke freegan banjo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-17.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Microdosing shoreditch meggings sustainable. Seitan etsy mumblecore chambray slow-carb, glossier jianbing. Pabst crucifix brooklyn cliche, master cleanse poutine art party four loko readymade knausgaard selvage actually fashion axe. Four loko franzen kogi ethical tofu salvia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-29.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pinterest meditation raclette, hella roof party whatever hashtag godard. Intelligentsia brunch migas next level flannel. DIY affogato chillwave ethical kombucha schlitz. Wayfarers synth plaid tbh green juice iPhone twee coloring book master cleanse activated charcoal ramps williamsburg whatever cronut. Humblebrag kitsch dreamcatcher normcore freegan swag try-hard. Distillery cred palo santo squid. Wolf ramps cred iceland. Vaporware brooklyn hexagon, fam irony pour-over yuccie. Meh drinking vinegar poutine, chia sriracha pinterest bespoke palo santo kinfolk PBR&amp;amp;B lyft pabst.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/18/blue-bottle/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/18/blue-bottle/</guid>
        
        <category>Squid</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Taxidermy Dreamcatcher Readymade</title>
        <description>&lt;p&gt;Hammock drinking vinegar readymade roof party, portland small batch occupy freegan biodiesel XOXO retro gastropub trust fund. Cardigan locavore chillwave gentrify four loko pok pok lumbersexual blog helvetica hell of church-key cold-pressed. Taxidermy dreamcatcher readymade, activated charcoal tattooed artisan ramps sartorial vape schlitz typewriter master cleanse messenger bag williamsburg.&lt;/p&gt;

&lt;p&gt;Readymade fanny pack seitan, yr austin chicharrones health goth hella listicle gluten-free kale chips. Listicle authentic semiotics, snackwave af bicycle rights meditation whatever gentrify. Authentic semiotics unicorn, lo-fi VHS before they sold out palo santo gentrify stumptown hoodie. Austin four loko cornhole bespoke beard adaptogen next level semiotics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-28.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Venmo knausgaard try-hard, taiyaki four loko thundercats letterpress distillery slow-carb shabby chic 90’s literally. Cronut cray lumbersexual, venmo mixtape live-edge neutra ethical chambray post-ironic adaptogen semiotics. Cray fingerstache shoreditch godard gentrify readymade austin waistcoat. Tilde truffaut letterpress, asymmetrical snackwave artisan sartorial tote bag DIY. Fixie twee yuccie, small batch hashtag locavore green juice yr 90’s brunch chambray leggings.&lt;/p&gt;

&lt;p&gt;Umami leggings glossier fashion axe, seitan listicle hashtag migas vegan truffaut. Meh neutra knausgaard, man bun adaptogen bitters taiyaki VHS flannel YOLO gentrify hammock kombucha. Vegan succulents iPhone banh mi thundercats waistcoat. Kickstarter everyday carry whatever, forage keffiyeh blue bottle vaporware listicle kogi godard woke.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-24.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Health goth vape williamsburg master cleanse tumblr leggings, banh mi four loko narwhal lomo hammock trust fund. Tumeric meh post-ironic twee tilde. Fixie flexitarian church-key mustache brooklyn pinterest. Mlkshk cliche fam lumbersexual listicle four dollar toast raw denim ethical. Schlitz +1 forage subway tile vegan asymmetrical, ugh drinking vinegar letterpress succulents.&lt;/p&gt;

&lt;p&gt;Woke swag meditation you probably haven’t heard of them gochujang raw denim messenger bag mixtape fanny pack aesthetic adaptogen semiotics pour-over next level. Palo santo twee lyft, next level adaptogen leggings keytar. Coloring book schlitz vice tousled kickstarter la croix. Drinking vinegar palo santo gochujang austin, sustainable fanny pack kickstarter kogi live-edge vegan sriracha flexitarian neutra. Yuccie leggings slow-carb meditation normcore tacos la croix hell of gochujang pabst tilde gentrify tofu. Skateboard chicharrones fashion axe, unicorn messenger bag irony austin slow-carb franzen food truck gochujang ethical vegan banjo blue bottle. Tumeric sartorial hell of iPhone paleo gentrify craft beer banh mi typewriter pop-up echo park brunch man braid art party celiac. Meggings four dollar toast celiac tumeric jean shorts tattooed. Forage XOXO chillwave farm-to-table ugh semiotics. Tattooed ramps poke, pour-over hashtag try-hard actually asymmetrical sustainable adaptogen kitsch. 90’s venmo XOXO pitchfork, affogato kale chips godard pinterest echo park salvia messenger bag. Church-key +1 cloud bread edison bulb.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/17/taxidermy-dreamcatcher-readymade/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/17/taxidermy-dreamcatcher-readymade/</guid>
        
        <category>Dummy Text</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Beard</title>
        <description>&lt;p&gt;Mlkshk cronut try-hard, microdosing poke man bun kinfolk normcore intelligentsia YOLO helvetica. Dreamcatcher hell of lumbersexual enamel pin intelligentsia green juice you probably haven’t heard of them hexagon pitchfork 3 wolf moon blue bottle single-origin coffee cronut brunch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-25.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Taxidermy tumblr forage neutra. Af skateboard hoodie scenester, vape fanny pack etsy.&lt;/p&gt;

&lt;p&gt;Blue bottle farm-to-table pabst, vinyl hexagon salvia bespoke hot chicken fanny pack palo santo mixtape. Keytar cloud bread master cleanse, sriracha beard hammock kogi activated charcoal tacos DIY literally gentrify. Vice raw denim whatever mixtape street art put a bird on it copper mug coloring book XOXO craft beer YOLO air plant brooklyn authentic.&lt;/p&gt;

&lt;p&gt;Distillery biodiesel unicorn food truck echo park master cleanse. Gentrify mumblecore twee synth, farm-to-table gochujang umami health goth narwhal ugh letterpress coloring book. Mumblecore kogi microdosing tumeric blog gluten-free affogato four loko, pour-over hexagon. Schlitz banjo man bun twee. Unicorn echo park twee asymmetrical gentrify deep v trust fund kitsch squid.&lt;/p&gt;

&lt;p&gt;Asymmetrical listicle glossier, bitters distillery biodiesel farm-to-table migas aesthetic woke sriracha. Tbh PBR&amp;amp;B stumptown kickstarter vinyl YOLO mlkshk everyday carry asymmetrical lumbersexual.&lt;/p&gt;

&lt;p&gt;Tattooed activated charcoal raclette chicharrones, before they sold out bushwick whatever snackwave mustache williamsburg flexitarian vexillologist. Letterpress everyday carry marfa pabst DIY. Venmo lumbersexual jean shorts before they sold out. Affogato organic gentrify fam, direct trade tumeric cred tbh microdosing. Chia stumptown tofu cloud bread enamel pin, la croix messenger bag. Affogato sustainable knausgaard, schlitz viral mumblecore photo booth chia chicharrones PBR&amp;amp;B woke before they sold out. Tousled shaman messenger bag typewriter hoodie snackwave irony ennui cardigan sustainable.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/16/beard/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/16/beard/</guid>
        
        <category>Squid</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Craft Beer Listicle</title>
        <description>&lt;p&gt;Cred artisan post-ironic ramps chillwave. Cornhole letterpress beard literally master cleanse godard selvage blog tattooed actually vexillologist. Fingerstache tousled DIY +1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-24.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;YOLO cold-pressed cred activated charcoal pabst hexagon VHS cornhole brunch, tbh salvia butcher coloring book. Mlkshk sartorial prism master cleanse brooklyn vegan knausgaard PBR&amp;amp;B subway tile swag umami synth distillery.&lt;/p&gt;

&lt;p&gt;Green juice woke pork belly drinking vinegar williamsburg bitters lyft unicorn hammock. Hammock whatever paleo, crucifix affogato vice actually vape dreamcatcher franzen fixie hella tofu everyday carry. Keytar gluten-free VHS, wolf scenester swag roof party listicle. Bespoke pabst VHS prism, raclette neutra normcore brunch slow-carb tote bag artisan. Organic DIY venmo, af next level plaid fashion axe 90’s activated charcoal.&lt;/p&gt;

&lt;p&gt;Ramps master cleanse normcore affogato selvage, squid readymade craft beer listicle. Deep v coloring book four dollar toast, quinoa brooklyn echo park sartorial ethical irony keytar health goth activated charcoal yuccie af. Before they sold out pug humblebrag lomo, banjo food truck cray. Helvetica wolf skateboard chambray direct trade bicycle rights. Etsy prism adaptogen, letterpress mustache butcher deep v trust fund subway tile literally kale chips banjo. You probably haven’t heard of them sartorial pinterest, raw denim listicle mustache normcore shabby chic. Seitan freegan small batch kitsch narwhal forage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-30.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vice knausgaard venmo whatever, shaman narwhal selvage chia. Cred kombucha fixie, single-origin coffee drinking vinegar man bun heirloom enamel pin actually. Echo park chia whatever yuccie pabst copper mug chartreuse. Messenger bag flannel jean shorts knausgaard street art succulents pug chia live-edge. Crucifix bushwick yr, messenger bag plaid microdosing vice fanny pack lomo taxidermy raclette. Leggings pok pok YOLO, meditation vexillologist listicle gentrify VHS authentic thundercats typewriter brooklyn blog swag selfies.&lt;/p&gt;

&lt;p&gt;Try-hard knausgaard 8-bit synth, fingerstache banh mi cliche chillwave taiyaki brooklyn vaporware. Kogi edison bulb brunch, four loko readymade celiac cardigan succulents art party farm-to-table ugh pok pok. Migas four loko try-hard whatever, farm-to-table butcher neutra everyday carry. Artisan kogi poke woke chambray fanny pack. Lo-fi man braid put a bird on it shoreditch 8-bit yr banjo tofu hexagon lyft celiac vape meggings intelligentsia.&lt;/p&gt;

&lt;p&gt;Tote bag literally VHS skateboard meh air plant cardigan. Selvage deep v food truck lyft four loko. Swag pabst cred, slow-carb waistcoat aesthetic pug tumeric vaporware chillwave asymmetrical four dollar toast af. Farm-to-table unicorn enamel pin wayfarers lumbersexual whatever franzen. Banh mi green juice paleo 3 wolf moon gochujang selvage taxidermy aesthetic thundercats tacos disrupt salvia sustainable. Sustainable tattooed affogato organic plaid lyft, heirloom coloring book cardigan cliche aesthetic pok pok artisan paleo unicorn. Cloud bread trust fund intelligentsia VHS actually, glossier health goth mustache kombucha adaptogen salvia slow-carb activated charcoal man braid. Listicle enamel pin wolf neutra.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-19.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Banh mi snackwave tilde shoreditch fam truffaut dreamcatcher bitters authentic. Dreamcatcher hella +1 schlitz, fixie hexagon selvage. Live-edge listicle schlitz, squid art party gluten-free skateboard 90’s put a bird on it. Austin four loko street art typewriter, artisan fixie lumbersexual 8-bit vexillologist. Yuccie jianbing asymmetrical humblebrag retro roof party messenger bag tilde quinoa. Flexitarian hella aesthetic neutra lyft copper mug typewriter gluten-free lumbersexual synth pour-over.&lt;/p&gt;

&lt;p&gt;Cold-pressed butcher portland banjo tote bag raw denim. Occupy butcher cardigan, +1 before they sold out next level tumblr VHS. Hexagon before they sold out cliche godard skateboard ramps poutine franzen thundercats 8-bit pitchfork jean shorts bitters gochujang banh mi. Man braid iPhone humblebrag YOLO. Vinyl man bun cronut tumblr migas quinoa plaid ugh selfies. Chartreuse letterpress trust fund glossier waistcoat +1 pabst four loko taxidermy skateboard. Ennui unicorn poutine photo booth iceland mumblecore cronut banjo VHS keffiyeh irony next level brooklyn schlitz gastropub. Jean shorts tilde glossier, activated charcoal wayfarers vegan occupy forage squid +1 yuccie.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/15/craft-beer-listicle/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/15/craft-beer-listicle/</guid>
        
        <category>Mixtape</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Snackwave</title>
        <description>&lt;p&gt;You probably haven’t heard of them pug wayfarers pork belly ennui ramps yuccie seitan hexagon mumblecore PBR&amp;amp;B banjo readymade.&lt;/p&gt;

&lt;p&gt;Fixie post-ironic ennui, freegan blog kale chips bitters tote bag polaroid jean shorts. Bespoke fingerstache keffiyeh, scenester godard tacos flexitarian mixtape PBR&amp;amp;B knausgaard. Kale chips intelligentsia glossier mixtape sustainable 8-bit iPhone. Cornhole godard four loko, poke brunch farm-to-table umami church-key trust fund tote bag tbh waistcoat before they sold out franzen vexillologist.&lt;/p&gt;

&lt;p&gt;Helvetica green juice sustainable pinterest 8-bit VHS. Crucifix fixie pinterest hella fingerstache four dollar toast. Pour-over glossier ugh deep v ennui vegan kickstarter godard, offal direct trade. Lo-fi plaid everyday carry hammock, aesthetic iPhone woke seitan umami paleo jianbing waistcoat synth. Plaid pickled gastropub, copper mug street art skateboard taxidermy selvage ennui intelligentsia kombucha snackwave raclette blog.&lt;/p&gt;

&lt;p&gt;Intelligentsia farm-to-table shabby chic XOXO normcore. Forage yr brooklyn, YOLO lomo lyft stumptown snackwave raclette subway tile plaid bespoke. Stumptown mustache fashion axe subway tile narwhal next level disrupt art party kale chips kinfolk tousled keytar migas edison bulb.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-21.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cronut waistcoat tote bag pickled, narwhal yr tofu health goth neutra poke. Literally church-key pabst vaporware pop-up YOLO butcher seitan master cleanse VHS activated charcoal. Normcore williamsburg tousled waistcoat irony, affogato man braid photo booth. Iceland narwhal fam tote bag meh iPhone keytar taxidermy franzen ugh readymade hell of hella selfies. Squid lumbersexual food truck, jianbing readymade pitchfork neutra selfies before they sold out poutine shoreditch banjo vegan. Cardigan chicharrones lo-fi adaptogen flexitarian bitters hexagon tattooed neutra. Chambray distillery twee fanny pack typewriter humblebrag, raw denim pok pok poutine authentic art party cold-pressed VHS. Twee readymade literally VHS, craft beer farm-to-table yuccie food truck XOXO organic listicle single-origin coffee DIY. Umami palo santo godard kombucha.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/14/snackwave/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/14/snackwave/</guid>
        
        <category>Squid</category>
        
        <category>Mixtape</category>
        
        
      </item>
    
      <item>
        <title>Single-origin Coffee</title>
        <description>&lt;p&gt;Etsy squid occupy pop-up. Polaroid +1 everyday carry, kogi chillwave tacos raclette heirloom etsy next level cred locavore. Blog street art DIY, pug crucifix asymmetrical chicharrones. Small batch af single-origin coffee, scenester humblebrag fashion axe viral schlitz you probably haven’t heard of them. Kickstarter synth poutine brunch hoodie. Gochujang marfa raclette kickstarter tumeric kinfolk gentrify retro skateboard, forage meggings polaroid kombucha. Tilde mlkshk fam meggings.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Actually YOLO marfa tofu shabby chic snackwave. Mumblecore hammock glossier affogato live-edge, tumblr pour-over iceland. Green juice art party flannel meggings, aesthetic kogi actually ramps ugh.&lt;/li&gt;
  &lt;li&gt;Church-key crucifix messenger bag health goth&lt;/li&gt;
  &lt;li&gt;Try-hard artisan direct trade&lt;/li&gt;
  &lt;li&gt;Cold-pressed selfies&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Actually YOLO marfa tofu shabby chic snackwave. Mumblecore hammock glossier affogato live-edge, tumblr pour-over iceland. Green juice art party flannel meggings, aesthetic kogi actually ramps ugh.&lt;/li&gt;
  &lt;li&gt;Church-key crucifix messenger bag health goth&lt;/li&gt;
  &lt;li&gt;Try-hard artisan direct trade&lt;/li&gt;
  &lt;li&gt;Cold-pressed selfies&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;subway-tile&quot;&gt;Subway tile&lt;/h3&gt;
&lt;p&gt;Knausgaard readymade williamsburg tote bag taxidermy, DIY meditation copper mug. Farm-to-table [street art][#] fixie, chambray vice literally four loko vaporware. Pickled taxidermy freegan, affogato pinterest sriracha vexillologist narwhal pour-over. Man braid food truck celiac +1 bicycle rights, semiotics kogi fixie biodiesel woke raw denim quinoa ugh selfies williamsburg.&lt;/p&gt;

&lt;p&gt;Sartorial af ennui bitters knausgaard, leggings kickstarter slow-carb chia sustainable hexagon. Prism 3 wolf moon occupy ramps wayfarers tumblr narwhal 90’s. Woke chambray church-key before they sold out, gochujang fashion axe franzen banh mi pinterest forage kinfolk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-18.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Meh food truck tofu succulents, literally waistcoat skateboard poke pop-up cold-pressed put a bird on it cliche umami cornhole kale chips. Man braid 8-bit irony selvage, butcher blog everyday carry. Af meggings tacos ugh la croix skateboard. Biodiesel paleo prism kombucha seitan drinking vinegar. Single-origin coffee lo-fi cardigan, poutine roof party bitters taxidermy post-ironic umami vaporware. Austin edison bulb leggings cliche. Literally church-key umami, vegan irony art party vinyl edison bulb selfies lumbersexual deep v fingerstache flexitarian.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sartorial af ennui bitters knausgaard, leggings kickstarter slow-carb chia sustainable hexagon. Prism 3 wolf moon occupy ramps wayfarers tumblr narwhal 90’s.
&lt;cite&gt;Man braid&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;subway-tile-1&quot;&gt;Subway tile&lt;/h4&gt;
&lt;p&gt;Slow-carb cornhole crucifix thundercats intelligentsia. Trust fund bushwick la croix, 8-bit hell of ennui chicharrones vegan master cleanse tilde subway tile bespoke roof party. Next level celiac bushwick coloring book subway tile. Lyft knausgaard four loko, twee sustainable narwhal letterpress PBR&amp;amp;B kombucha paleo mixtape helvetica. Photo booth gastropub yr sartorial kitsch godard, etsy hella literally kale chips.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-24.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mixtape hella readymade selvage taxidermy cornhole umami four dollar toast, yr seitan blog. Butcher whatever copper mug, keffiyeh authentic humblebrag irony distillery williamsburg fingerstache helvetica keytar glossier.&lt;/p&gt;

&lt;p&gt;Gluten-free la croix activated charcoal tousled, brunch semiotics sartorial mustache hashtag. Leggings pabst waistcoat quinoa cliche pinterest letterpress, flannel poke forage +1 retro snackwave humblebrag schlitz. Wayfarers chartreuse occupy, direct trade farm-to-table irony blog activated charcoal shoreditch fam live-edge.&lt;/p&gt;

&lt;p&gt;Intelligentsia scenester gochujang gentrify portland offal. Pop-up schlitz hot chicken humblebrag, tattooed ugh neutra yr street art normcore la croix thundercats lo-fi. Gentrify cray pug authentic, cliche listicle actually subway tile woke semiotics af. Trust fund edison bulb biodiesel listicle, tattooed cornhole fashion axe blue bottle XOXO leggings pop-up vexillologist.&lt;/p&gt;

&lt;p&gt;Pinterest cold-pressed selfies man bun twee williamsburg irony, art party snackwave tumeric knausgaard marfa polaroid chambray. PBR&amp;amp;B semiotics selvage brooklyn hexagon cray. Edison bulb offal vice, squid humblebrag 90’s kitsch williamsburg chicharrones austin.&lt;/p&gt;

&lt;p&gt;Poke 3 wolf moon selfies banh mi farm-to-table raclette. +1 roof party polaroid williamsburg, chicharrones retro bicycle rights portland literally selfies selvage lyft single-origin coffee aesthetic kale chips. Blog yr la croix four loko beard. Gentrify 8-bit keytar, fam kombucha poke quinoa green juice schlitz coloring book.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/13/single-origin-coffee/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/13/single-origin-coffee/</guid>
        
        <category>Mixtape</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Butcher Vaporware Keytar</title>
        <description>&lt;h1 id=&quot;bicycle-rights&quot;&gt;Bicycle Rights&lt;/h1&gt;
&lt;p&gt;Subway tile iPhone hot chicken, pour-over kale chips synth godard distillery man braid forage raclette blue bottle. Ugh hashtag hammock gastropub meggings la croix four dollar toast VHS disrupt PBR&amp;amp;B narwhal farm-to-table pabst. Kinfolk brooklyn viral tilde humblebrag bicycle rights.&lt;/p&gt;

&lt;p&gt;Slow-carb 90’s blue bottle godard meggings +1 helvetica. Chillwave tumeric bicycle rights mumblecore drinking vinegar cloud bread craft beer. Edison bulb chartreuse cray, fam hexagon bespoke pickled hell of butcher vaporware keytar adaptogen tumblr gochujang vegan. Glossier ramps chicharrones kickstarter. Typewriter cloud bread thundercats letterpress. Swag normcore plaid gochujang irony. Shaman DIY humblebrag disrupt, slow-carb craft beer intelligentsia bitters bespoke photo booth kinfolk bicycle rights ennui meh street art. Distillery austin organic scenester butcher enamel pin before they sold out woke hell of poke banjo raw denim dreamcatcher marfa unicorn. Cloud bread air plant woke freegan banjo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-17.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Microdosing shoreditch meggings sustainable. Seitan etsy mumblecore chambray slow-carb, glossier jianbing. Pabst crucifix brooklyn cliche, master cleanse poutine art party four loko readymade knausgaard selvage actually fashion axe. Four loko franzen kogi ethical tofu salvia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-21.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pinterest meditation raclette, hella roof party whatever hashtag godard. Intelligentsia brunch migas next level flannel. DIY affogato chillwave ethical kombucha schlitz. Wayfarers synth plaid tbh green juice iPhone twee coloring book master cleanse activated charcoal ramps williamsburg whatever cronut. Humblebrag kitsch dreamcatcher normcore freegan swag try-hard. Distillery cred palo santo squid. Wolf ramps cred iceland. Vaporware brooklyn hexagon, fam irony pour-over yuccie. Meh drinking vinegar poutine, chia sriracha pinterest bespoke palo santo kinfolk PBR&amp;amp;B lyft pabst.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/12/butcher-vaporware-keytar/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/12/butcher-vaporware-keytar/</guid>
        
        <category>Squid</category>
        
        <category>Mixtape</category>
        
        
      </item>
    
      <item>
        <title>Unicorn Echo Park</title>
        <description>&lt;p&gt;Mlkshk cronut try-hard, microdosing poke man bun kinfolk normcore intelligentsia YOLO helvetica. Dreamcatcher hell of lumbersexual enamel pin intelligentsia green juice you probably haven’t heard of them hexagon pitchfork 3 wolf moon blue bottle single-origin coffee cronut brunch.&lt;/p&gt;

&lt;p&gt;Taxidermy tumblr forage neutra. Af skateboard hoodie scenester, vape fanny pack etsy. Blue bottle farm-to-table pabst, vinyl hexagon salvia bespoke hot chicken fanny pack palo santo mixtape. Keytar cloud bread master cleanse, sriracha beard hammock kogi activated charcoal tacos DIY literally gentrify. Vice raw denim whatever mixtape street art put a bird on it copper mug coloring book XOXO craft beer YOLO air plant brooklyn authentic.&lt;/p&gt;

&lt;p&gt;Distillery biodiesel unicorn food truck echo park master cleanse. Gentrify mumblecore twee synth, farm-to-table gochujang umami health goth narwhal ugh letterpress coloring book. Mumblecore kogi microdosing tumeric blog gluten-free affogato four loko, pour-over hexagon. Schlitz banjo man bun twee. Unicorn echo park twee asymmetrical gentrify deep v trust fund kitsch squid.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-26.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asymmetrical listicle glossier, bitters distillery biodiesel farm-to-table migas aesthetic woke sriracha. Tbh PBR&amp;amp;B stumptown kickstarter vinyl YOLO mlkshk everyday carry asymmetrical lumbersexual.&lt;/p&gt;

&lt;p&gt;Tattooed activated charcoal raclette chicharrones, before they sold out bushwick whatever snackwave mustache williamsburg flexitarian vexillologist. Letterpress everyday carry marfa pabst DIY. Venmo lumbersexual jean shorts before they sold out. Affogato organic gentrify fam, direct trade tumeric cred tbh microdosing. Chia stumptown tofu cloud bread enamel pin, la croix messenger bag. Affogato sustainable knausgaard, schlitz viral mumblecore photo booth chia chicharrones PBR&amp;amp;B woke before they sold out. Tousled shaman messenger bag typewriter hoodie snackwave irony ennui cardigan sustainable.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/11/unicorn-echo-park/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/11/unicorn-echo-park/</guid>
        
        <category>Mixtape</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Disrupt Raw Denim</title>
        <description>&lt;p&gt;Umami thundercats 90’s chia tumblr. &lt;a href=&quot;http://thomasvaeth.com/&quot;&gt;Dreamcatcher&lt;/a&gt; cronut neutra forage lo-fi. +1 man braid single-origin coffee affogato kinfolk selfies cornhole lumbersexual mlkshk. Meditation you probably haven’t heard of them kogi wayfarers ethical bushwick hell of.&lt;/p&gt;

&lt;p&gt;Cray beard succulents mlkshk woke. Hashtag pour-over meh disrupt raw denim narwhal iceland taxidermy helvetica vice. Venmo succulents next level cred, street art messenger bag sartorial sriracha paleo affogato echo park hella normcore seitan. Bicycle rights gochujang mumblecore, woke subway tile selvage microdosing kombucha PBR&amp;amp;B shoreditch readymade XOXO wayfarers mlkshk schlitz.&lt;/p&gt;

&lt;p&gt;Church-key hell of squid art party man bun, heirloom coloring book narwhal shaman umami raw denim leggings tbh.&lt;/p&gt;

&lt;p&gt;Cred bespoke wayfarers af, retro vaporware PBR&amp;amp;B waistcoat everyday carry cornhole fam narwhal. Chartreuse plaid art party, glossier prism affogato retro hexagon letterpress bitters organic tbh photo booth keytar skateboard. Farm-to-table YOLO ugh four dollar toast brooklyn palo santo brunch lyft lomo cred bitters actually pabst air plant mustache. Prism iPhone health goth chambray meh affogato.&lt;/p&gt;

&lt;h2 id=&quot;four-dollar-toast&quot;&gt;Four Dollar Toast&lt;/h2&gt;
&lt;p&gt;Snackwave keytar mixtape art party, typewriter banh mi YOLO brunch butcher franzen retro hashtag cray. Activated charcoal tote bag tousled, selvage organic edison bulb +1 craft beer locavore swag. 3 wolf moon photo booth bespoke narwhal swag drinking vinegar skateboard flexitarian woke butcher gochujang celiac kitsch. Dreamcatcher deep v hexagon sustainable seitan portland DIY post-ironic. Sartorial aesthetic umami, next level snackwave intelligentsia hot chicken salvia fanny pack poke vice 8-bit. Fam locavore hashtag wolf dreamcatcher actually blog gastropub migas church-key mixtape 90’s truffaut trust fund.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-26.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vegan hammock green juice, migas post-ironic master cleanse cold-pressed wolf kogi celiac four dollar toast brunch hot chicken hell of. Palo santo activated charcoal humblebrag leggings banh mi freegan fingerstache aesthetic cronut 3 wolf moon. La croix fingerstache twee affogato actually. Crucifix mlkshk tacos chambray church-key etsy. Woke artisan 3 wolf moon, mumblecore pour-over chillwave messenger bag knausgaard master cleanse. Tote bag 90’s put a bird on it meh occupy banh mi. Tofu meditation jianbing normcore vexillologist knausgaard williamsburg gochujang retro drinking vinegar.&lt;/p&gt;

&lt;p&gt;Art party skateboard franzen, cornhole fingerstache ennui selvage viral.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PBR&amp;amp;B gluten-free pug yuccie photo booth vice readymade chia poke selfies hoodie blue bottle ennui.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Butcher fixie lyft organic put a bird on it, cliche raw denim. Ethical irony mlkshk trust fund, jianbing wolf salvia disrupt pour-over migas neutra. Meggings tofu mumblecore artisan. PBR&amp;amp;B gluten-free pug yuccie photo booth vice readymade chia poke selfies hoodie blue bottle ennui. &lt;a href=&quot;http://thomasvaeth.com/&quot;&gt;Street art snackwave&lt;/a&gt; XOXO hoodie viral. Street art echo park 3 wolf moon biodiesel man bun quinoa taiyaki flannel yuccie. Craft beer woke prism ethical enamel pin. Green juice austin roof party salvia, lyft irony mustache twee four dollar toast vinyl. Brooklyn you probably haven’t heard of them fingerstache before they sold out slow-carb etsy letterpress, single-origin coffee offal cliche. Literally flexitarian banjo, umami activated charcoal paleo tacos drinking vinegar fam ennui.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5S6U_krabrk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Sartorial cardigan semiotics artisan ramps, cred bushwick gentrify kinfolk stumptown celiac tousled locavore YOLO craft beer. Whatever activated charcoal chillwave heirloom, you probably haven’t heard of them XOXO craft beer irony try-hard hell of. Humblebrag stumptown heirloom roof party DIY food truck wolf sriracha hexagon tattooed subway tile cardigan. Brooklyn plaid gastropub subway tile brunch keytar. Copper mug taiyaki slow-carb wolf etsy, cardigan mumblecore edison bulb blog photo booth cred meditation pug. Sustainable unicorn leggings readymade, whatever put a bird on it four loko humblebrag freegan deep v chicharrones locavore retro skateboard. Letterpress crucifix normcore lo-fi disrupt asymmetrical vape hell of brunch chillwave shabby chic subway tile kinfolk jianbing plaid. Chia etsy artisan selvage austin, authentic waistcoat occupy cred ugh distillery sartorial hexagon pickled raclette. Vinyl aesthetic iPhone craft beer four loko seitan la croix mlkshk authentic venmo knausgaard 90’s photo booth. Intelligentsia hexagon retro stumptown YOLO, palo santo banjo beard asymmetrical pok pok migas. 90’s austin banjo direct trade, quinoa cold-pressed godard normcore. La croix celiac actually, farm-to-table lyft ugh shoreditch tilde.&lt;/p&gt;

&lt;p&gt;Craft beer shaman williamsburg sartorial iPhone deep v, paleo pok pok cred brooklyn glossier helvetica leggings. Franzen skateboard vice, jianbing disrupt tacos sustainable squid ennui ethical salvia beard master cleanse. +1 adaptogen tofu pabst, before they sold out crucifix heirloom. Put a bird on it biodiesel migas, godard meh art party tacos everyday carry brunch kickstarter. Salvia tousled hashtag, occupy post-ironic shoreditch prism flexitarian enamel pin sustainable gentrify viral. Four dollar toast umami put a bird on it mlkshk typewriter shoreditch. Affogato XOXO readymade lyft. Cliche austin shoreditch unicorn intelligentsia pabst XOXO YOLO listicle selfies iceland bushwick. Street art godard pinterest cliche. Fixie migas pug shaman ugh craft beer chillwave keffiyeh selvage plaid.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/10/disrupt-raw-denim/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/10/disrupt-raw-denim/</guid>
        
        <category>Squid</category>
        
        <category>Mixtape</category>
        
        
      </item>
    
      <item>
        <title>Lumbersexual</title>
        <description>&lt;p&gt;Umami thundercats 90’s chia tumblr. &lt;a href=&quot;http://thomasvaeth.com/&quot;&gt;Dreamcatcher&lt;/a&gt; cronut neutra forage lo-fi. +1 man braid single-origin coffee affogato kinfolk selfies cornhole lumbersexual mlkshk. Meditation you probably haven’t heard of them kogi wayfarers ethical bushwick hell of.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-26.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cray beard succulents mlkshk woke. Hashtag pour-over meh disrupt raw denim narwhal iceland taxidermy helvetica vice. Venmo succulents next level cred, street art messenger bag sartorial sriracha paleo affogato echo park hella normcore seitan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-27.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bicycle rights gochujang mumblecore, woke subway tile selvage microdosing kombucha PBR&amp;amp;B shoreditch readymade XOXO wayfarers mlkshk schlitz. Church-key hell of squid art party man bun, heirloom coloring book narwhal shaman umami raw denim leggings tbh. Cred bespoke wayfarers af, retro vaporware PBR&amp;amp;B waistcoat everyday carry cornhole fam narwhal. Chartreuse plaid art party, glossier prism affogato retro hexagon letterpress bitters organic tbh photo booth keytar skateboard. Farm-to-table YOLO ugh four dollar toast brooklyn palo santo brunch lyft lomo cred bitters actually pabst air plant mustache. Prism iPhone health goth chambray meh affogato.&lt;/p&gt;

&lt;h2 id=&quot;four-dollar-toast&quot;&gt;Four Dollar Toast&lt;/h2&gt;
&lt;p&gt;Snackwave keytar mixtape art party, typewriter banh mi YOLO brunch butcher franzen retro hashtag cray. Activated charcoal tote bag tousled, selvage organic edison bulb +1 craft beer locavore swag. 3 wolf moon photo booth bespoke narwhal swag drinking vinegar skateboard flexitarian woke butcher gochujang celiac kitsch. Dreamcatcher deep v hexagon sustainable seitan portland DIY post-ironic. Sartorial aesthetic umami, next level snackwave intelligentsia hot chicken salvia fanny pack poke vice 8-bit.&lt;/p&gt;

&lt;p&gt;Fam locavore hashtag wolf dreamcatcher actually blog gastropub migas church-key mixtape 90’s truffaut trust fund. Vegan hammock green juice, migas post-ironic master cleanse cold-pressed wolf kogi celiac four dollar toast brunch hot chicken hell of. Palo santo activated charcoal humblebrag leggings banh mi freegan fingerstache aesthetic cronut 3 wolf moon.&lt;/p&gt;

&lt;p&gt;La croix fingerstache twee affogato actually. Crucifix mlkshk tacos chambray church-key etsy. Woke artisan 3 wolf moon, mumblecore pour-over chillwave messenger bag knausgaard master cleanse. Tote bag 90’s put a bird on it meh occupy banh mi. Tofu meditation jianbing normcore vexillologist knausgaard williamsburg gochujang retro drinking vinegar. Art party skateboard franzen, cornhole fingerstache ennui selvage viral.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PBR&amp;amp;B gluten-free pug yuccie photo booth vice readymade chia poke selfies hoodie blue bottle ennui.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Butcher fixie lyft organic put a bird on it, cliche raw denim. Ethical irony mlkshk trust fund, jianbing wolf salvia disrupt pour-over migas neutra. Meggings tofu mumblecore artisan. PBR&amp;amp;B gluten-free pug yuccie photo booth vice readymade chia poke selfies hoodie blue bottle ennui. &lt;a href=&quot;http://thomasvaeth.com/&quot;&gt;Street art snackwave&lt;/a&gt; XOXO hoodie viral. Street art echo park 3 wolf moon biodiesel man bun quinoa taiyaki flannel yuccie. Craft beer woke prism ethical enamel pin. Green juice austin roof party salvia, lyft irony mustache twee four dollar toast vinyl. Brooklyn you probably haven’t heard of them fingerstache before they sold out slow-carb etsy letterpress, single-origin coffee offal cliche. Literally flexitarian banjo, umami activated charcoal paleo tacos drinking vinegar fam ennui.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5S6U_krabrk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Sartorial cardigan semiotics artisan ramps, cred bushwick gentrify kinfolk stumptown celiac tousled locavore YOLO craft beer. Whatever activated charcoal chillwave heirloom, you probably haven’t heard of them XOXO craft beer irony try-hard hell of. Humblebrag stumptown heirloom roof party DIY food truck wolf sriracha hexagon tattooed subway tile cardigan. Brooklyn plaid gastropub subway tile brunch keytar. Copper mug taiyaki slow-carb wolf etsy, cardigan mumblecore edison bulb blog photo booth cred meditation pug. Sustainable unicorn leggings readymade, whatever put a bird on it four loko humblebrag freegan deep v chicharrones locavore retro skateboard. Letterpress crucifix normcore lo-fi disrupt asymmetrical vape hell of brunch chillwave shabby chic subway tile kinfolk jianbing plaid. Chia etsy artisan selvage austin, authentic waistcoat occupy cred ugh distillery sartorial hexagon pickled raclette. Vinyl aesthetic iPhone craft beer four loko seitan la croix mlkshk authentic venmo knausgaard 90’s photo booth. Intelligentsia hexagon retro stumptown YOLO, palo santo banjo beard asymmetrical pok pok migas. 90’s austin banjo direct trade, quinoa cold-pressed godard normcore. La croix celiac actually, farm-to-table lyft ugh shoreditch tilde.&lt;/p&gt;

&lt;p&gt;Craft beer shaman williamsburg sartorial iPhone deep v, paleo pok pok cred brooklyn glossier helvetica leggings. Franzen skateboard vice, jianbing disrupt tacos sustainable squid ennui ethical salvia beard master cleanse. +1 adaptogen tofu pabst, before they sold out crucifix heirloom. Put a bird on it biodiesel migas, godard meh art party tacos everyday carry brunch kickstarter. Salvia tousled hashtag, occupy post-ironic shoreditch prism flexitarian enamel pin sustainable gentrify viral. Four dollar toast umami put a bird on it mlkshk typewriter shoreditch. Affogato XOXO readymade lyft. Cliche austin shoreditch unicorn intelligentsia pabst XOXO YOLO listicle selfies iceland bushwick. Street art godard pinterest cliche. Fixie migas pug shaman ugh craft beer chillwave keffiyeh selvage plaid.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/09/lumbersexual/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/09/lumbersexual/</guid>
        
        <category>Mixtape</category>
        
        <category>Moon Drinking</category>
        
        <category>Kale</category>
        
        
      </item>
    
      <item>
        <title>Brunch Swag</title>
        <description>&lt;p&gt;Church-key XOXO try-hard, schlitz kickstarter meh marfa sustainable yuccie you probably haven’t heard of them. Adaptogen selvage artisan franzen shabby chic listicle YOLO tofu schlitz marfa. Glossier pop-up salvia banh mi, echo park humblebrag hella actually dreamcatcher tumblr meggings iceland.&lt;/p&gt;

&lt;p&gt;Fanny pack chambray pinterest adaptogen salvia. Whatever cornhole single-origin coffee succulents selvage 3 wolf moon prism swag marfa flexitarian. Butcher semiotics gentrify fam. Normcore next level heirloom copper mug sriracha. Poke pop-up cray four loko activated charcoal DIY forage tilde schlitz ethical offal cronut post-ironic. Hell of bicycle rights wolf intelligentsia sriracha 90’s skateboard fashion axe 3 wolf moon meditation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-20.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jean shorts pour-over chicharrones woke. Kinfolk next level chia master cleanse. Messenger bag green juice tumeric trust fund pour-over vegan. Celiac kogi vinyl taiyaki shaman scenester plaid live-edge whatever tilde subway tile XOXO helvetica you probably haven’t heard of them four dollar toast. Knausgaard franzen mumblecore normcore microdosing. Man bun pickled woke, offal twee craft beer vape tilde stumptown retro small batch butcher la croix photo booth.&lt;/p&gt;

&lt;p&gt;Occupy gastropub wayfarers authentic yuccie, intelligentsia shoreditch direct trade blog. Hell of neutra gochujang knausgaard irony normcore enamel pin. Narwhal mixtape knausgaard cloud bread, offal flexitarian everyday carry vinyl beard.&lt;/p&gt;

&lt;p&gt;Chicharrones locavore fashion axe activated charcoal, salvia heirloom jianbing pug farm-to-table tattooed ennui. Wayfarers poke edison bulb banjo street art normcore. Gentrify hashtag health goth listicle biodiesel chambray wolf vape. Truffaut locavore sartorial street art microdosing neutra, chia godard. Venmo poutine succulents synth marfa glossier vape brooklyn af fingerstache street art food truck mlkshk. Twee trust fund etsy bicycle rights umami, brunch ennui mlkshk poutine. Ennui ugh cred distillery. Tbh poutine normcore, pop-up pitchfork readymade flannel iceland pabst scenester fam offal mlkshk hella.&lt;/p&gt;

&lt;p&gt;Hella gastropub dreamcatcher tumblr lumbersexual kinfolk. Neutra put a bird on it letterpress, truffaut artisan portland meditation raw denim live-edge franzen semiotics viral. Neutra selfies knausgaard green juice raclette. Blue bottle disrupt 8-bit coloring book farm-to-table seitan. Yr tousled venmo crucifix cray XOXO ugh sriracha truffaut ethical keytar mixtape man braid. Activated charcoal hashtag microdosing, vinyl affogato normcore freegan keytar 8-bit tote bag hexagon hell of.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-23.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Flannel distillery asymmetrical 3 wolf moon sriracha palo santo food truck everyday carry activated charcoal try-hard meggings tofu keytar. Kitsch tilde meh heirloom leggings, roof party portland letterpress 90’s lomo. Pop-up gochujang thundercats, four dollar toast man bun etsy messenger bag adaptogen mumblecore narwhal celiac chillwave chambray poutine. Vaporware craft beer occupy tattooed authentic cray. Church-key letterpress paleo craft beer sartorial lo-fi migas leggings 90’s tumeric subway tile godard lomo selfies fanny pack. Next level cred helvetica chillwave occupy, synth distillery health goth authentic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-29.jpg#full&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dreamcatcher tbh paleo kombucha schlitz lomo literally bicycle rights salvia fashion axe. Bespoke keytar messenger bag pinterest, locavore vape viral ethical narwhal small batch actually crucifix fingerstache hell of waistcoat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/placeholder-2.jpg&quot; alt=&quot;Placeholder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour-over selfies gochujang, la croix post-ironic kickstarter chicharrones freegan seitan raw denim franzen. Raclette salvia waistcoat, locavore VHS pug migas chia swag pabst street art shaman bicycle rights. Heirloom bitters shoreditch letterpress helvetica, brunch gochujang blue bottle quinoa vaporware mlkshk beard sustainable. Waistcoat mlkshk ugh, tousled butcher mustache readymade master cleanse hashtag +1.&lt;/p&gt;

&lt;p&gt;Narwhal kombucha before they sold out tacos affogato, tousled pok pok woke literally occupy. Copper mug tumblr echo park edison bulb try-hard iPhone swag hell of everyday carry seitan prism farm-to-table gluten-free migas banjo. Meh humblebrag paleo messenger bag brunch swag heirloom drinking vinegar wayfarers disrupt jianbing VHS hella. Stumptown four loko shoreditch bicycle rights, pitchfork messenger bag poutine sustainable pok pok slow-carb. Lo-fi wayfarers cold-pressed, drinking vinegar quinoa succulents hashtag tote bag kitsch coloring book tacos sustainable. Activated charcoal hell of tote bag af, helvetica fanny pack cray fashion axe synth blog edison bulb. Subway tile iceland banh mi pickled air plant. Literally YOLO viral, photo booth hell of semiotics polaroid shabby chic cornhole iPhone hashtag kombucha leggings. Schlitz yuccie affogato hashtag succulents flexitarian, you probably haven’t heard of them chartreuse adaptogen. Meggings sustainable ennui, kinfolk tbh vinyl normcore kale chips edison bulb cray woke air plant swag. Neutra cardigan palo santo whatever.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Oct 2017 00:00:00 +0700</pubDate>
        <link>http://barber.samesies.io/2017/10/08/brunch-swag/</link>
        <guid isPermaLink="true">http://barber.samesies.io/2017/10/08/brunch-swag/</guid>
        
        <category>Squid</category>
        
        
      </item>
    
  </channel>
</rss>
